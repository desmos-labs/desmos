import React from "react";
import clsx from "clsx";
import Switch from "react-switch";
import useIsBrowser from "@docusaurus/useIsBrowser";
import { translate } from "@docusaurus/Translate";
import styles from "./styles.module.css";

function ColorModeToggle({ className, value, onChange }) {
  const isBrowser = useIsBrowser();
  const title = translate(
    {
      message: "Switch between dark and light mode (currently {mode})",
      id: "theme.colorToggle.ariaLabel",
      description: "The ARIA label for the navbar color mode toggle",
    },
    {
      mode:
        value === "dark"
          ? translate({
              message: "dark mode",
              id: "theme.colorToggle.ariaLabel.mode.dark",
              description: "The name for the dark color mode",
            })
          : translate({
              message: "light mode",
              id: "theme.colorToggle.ariaLabel.mode.light",
              description: "The name for the light color mode",
            }),
    }
  );

  const checkedIcon = (
    <svg
      width="'90%"
      height="90%"
      viewBox="0 -1 20 21"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8.78331 4.47292C8.09694 4.61057 7.43614 4.865 6.83062 5.22799C5.87577 5.80038 5.09421 6.62124 4.56931 7.60299C4.04441 8.58474 3.79585 9.69057 3.85015 10.8025C3.90444 11.9145 4.25956 12.9908 4.87763 13.9167C5.49569 14.8427 6.35351 15.5835 7.35958 16.0601C8.36565 16.5368 9.48224 16.7314 10.5902 16.6232C11.6982 16.5149 12.7561 16.108 13.6509 15.4457C14.1459 15.0794 14.5807 14.6426 14.9428 14.1514C14.0343 14.265 13.1053 14.1815 12.2209 13.8985C10.8074 13.4462 9.59711 12.513 8.80037 11.2609C8.00364 10.0089 7.67083 8.51723 7.8598 7.04526C7.97802 6.1244 8.29577 5.24767 8.78331 4.47292ZM10.0806 3.02559C10.051 3.02157 10.0209 3.01952 9.99072 3.01953C8.63608 3.01986 7.30694 3.3879 6.14507 4.08439C4.98321 4.78089 4.0322 5.77972 3.39349 6.97433C2.75478 8.16894 2.45233 9.51452 2.5184 10.8675C2.58447 12.2206 3.01659 13.5303 3.76865 14.657C4.52071 15.7837 5.56452 16.6851 6.78872 17.2651C8.01292 17.845 9.3716 18.0818 10.7198 17.9502C12.068 17.8185 13.3552 17.3233 14.4441 16.5175C15.533 15.7116 16.3827 14.6253 16.9025 13.3744C17.0057 13.1262 16.9497 12.8402 16.7605 12.6493C16.5713 12.4583 16.2859 12.3997 16.0367 12.5006C14.9501 12.9406 13.7437 12.9859 12.6272 12.6286C11.5107 12.2713 10.5546 11.5341 9.92526 10.5451C9.2959 9.55608 9.033 8.37778 9.18228 7.21504C9.33155 6.05229 9.88355 4.97861 10.7423 4.18063C10.9431 3.99405 11.0093 3.70359 10.909 3.44847C10.8088 3.19336 10.5626 3.02559 10.2885 3.02559H10.0806Z"
        fill="#25282D"
      />
      <path
        d="M13.7643 3.97559C13.7643 4.37732 13.9239 4.7626 14.208 5.04667C14.492 5.33075 14.8773 5.49033 15.279 5.49033C14.8773 5.49033 14.492 5.64992 14.208 5.93399C13.9239 6.21806 13.7643 6.60335 13.7643 7.00508C13.7643 6.60335 13.6047 6.21806 13.3206 5.93399C13.0366 5.64992 12.6513 5.49033 12.2495 5.49033C12.6513 5.49033 13.0366 5.33075 13.3206 5.04667C13.6047 4.7626 13.7643 4.37732 13.7643 3.97559Z"
        fill="#25282D"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M13.7643 3.43359C14.0634 3.43359 14.3059 3.67611 14.3059 3.97526C14.3059 4.23334 14.4085 4.48084 14.5909 4.66333C14.7734 4.84582 15.0209 4.94834 15.279 4.94834C15.5782 4.94834 15.8207 5.19085 15.8207 5.49001C15.8207 5.78916 15.5782 6.03168 15.279 6.03168C15.0209 6.03168 14.7734 6.1342 14.5909 6.31668C14.4085 6.49917 14.3059 6.74668 14.3059 7.00476C14.3059 7.30391 14.0634 7.54642 13.7643 7.54642C13.4651 7.54642 13.2226 7.30391 13.2226 7.00476C13.2226 6.74668 13.1201 6.49917 12.9376 6.31668C12.7551 6.1342 12.5076 6.03168 12.2495 6.03168C11.9504 6.03168 11.7079 5.78916 11.7079 5.49001C11.7079 5.19085 11.9504 4.94834 12.2495 4.94834C12.5076 4.94834 12.7551 4.84582 12.9376 4.66333C13.1201 4.48084 13.2226 4.23334 13.2226 3.97526C13.2226 3.67611 13.4651 3.43359 13.7643 3.43359ZM13.7643 5.36608C13.7445 5.38756 13.7243 5.40866 13.7036 5.42937C13.6829 5.45007 13.6618 5.47029 13.6403 5.49001C13.6618 5.50973 13.6829 5.52995 13.7036 5.55065C13.7243 5.57136 13.7445 5.59246 13.7643 5.61393C13.784 5.59246 13.8042 5.57136 13.8249 5.55065C13.8456 5.52995 13.8667 5.50973 13.8882 5.49001C13.8667 5.47029 13.8456 5.45007 13.8249 5.42937C13.8042 5.40866 13.784 5.38756 13.7643 5.36608Z"
        fill="#25282D"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M16.6667 8.44336C16.9658 8.44336 17.2083 8.68587 17.2083 8.98503V9.20073H17.424C17.7232 9.20073 17.9657 9.44325 17.9657 9.7424C17.9657 10.0416 17.7232 10.2841 17.424 10.2841H17.2083V10.4998C17.2083 10.7989 16.9658 11.0414 16.6667 11.0414C16.3675 11.0414 16.125 10.7989 16.125 10.4998V10.2841H15.9093C15.6101 10.2841 15.3676 10.0416 15.3676 9.7424C15.3676 9.44325 15.6101 9.20073 15.9093 9.20073H16.125V8.98503C16.125 8.68587 16.3675 8.44336 16.6667 8.44336Z"
        fill="#25282D"
      />
    </svg>
  );

  const uncheckedIcon = (
    <svg
      width="'90%"
      height="90%"
      viewBox="0 -1 20 21"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M9.99984 7.00033C8.06684 7.00033 6.49984 8.56733 6.49984 10.5003C6.49984 12.4333 8.06684 14.0003 9.99984 14.0003C11.9328 14.0003 13.4998 12.4333 13.4998 10.5003C13.4998 8.56733 11.9328 7.00033 9.99984 7.00033ZM5.1665 10.5003C5.1665 7.83095 7.33046 5.66699 9.99984 5.66699C12.6692 5.66699 14.8332 7.83095 14.8332 10.5003C14.8332 13.1697 12.6692 15.3337 9.99984 15.3337C7.33046 15.3337 5.1665 13.1697 5.1665 10.5003Z"
        fill="#AFAFAF"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M10.0002 2.33301C10.3684 2.33301 10.6668 2.63148 10.6668 2.99967V3.83301C10.6668 4.2012 10.3684 4.49967 10.0002 4.49967C9.63197 4.49967 9.3335 4.2012 9.3335 3.83301V2.99967C9.3335 2.63148 9.63197 2.33301 10.0002 2.33301ZM4.19542 4.69494C4.45577 4.43459 4.87788 4.43459 5.13823 4.69494L5.72157 5.27827C5.98192 5.53862 5.98192 5.96073 5.72157 6.22108C5.46122 6.48143 5.03911 6.48143 4.77876 6.22108L4.19542 5.63775C3.93508 5.3774 3.93508 4.95529 4.19542 4.69494ZM15.8049 4.69494C16.0652 4.95529 16.0652 5.3774 15.8049 5.63774L15.2216 6.22108C14.9612 6.48143 14.5391 6.48143 14.2788 6.22108C14.0184 5.96073 14.0184 5.53862 14.2788 5.27827L14.8621 4.69494C15.1224 4.43459 15.5445 4.43459 15.8049 4.69494ZM1.8335 10.4997C1.8335 10.1315 2.13197 9.83301 2.50016 9.83301H3.3335C3.70169 9.83301 4.00016 10.1315 4.00016 10.4997C4.00016 10.8679 3.70169 11.1663 3.3335 11.1663H2.50016C2.13197 11.1663 1.8335 10.8679 1.8335 10.4997ZM16.0002 10.4997C16.0002 10.1315 16.2986 9.83301 16.6668 9.83301H17.5002C17.8684 9.83301 18.1668 10.1315 18.1668 10.4997C18.1668 10.8679 17.8684 11.1663 17.5002 11.1663H16.6668C16.2986 11.1663 16.0002 10.8679 16.0002 10.4997ZM5.72157 14.7783C5.98192 15.0386 5.98192 15.4607 5.72157 15.7211L5.13823 16.3044C4.87788 16.5648 4.45577 16.5648 4.19542 16.3044C3.93508 16.0441 3.93508 15.622 4.19543 15.3616L4.77876 14.7783C5.03911 14.5179 5.46122 14.5179 5.72157 14.7783ZM14.2788 14.7783C14.5391 14.5179 14.9612 14.5179 15.2216 14.7783L15.8049 15.3616C16.0652 15.622 16.0652 16.0441 15.8049 16.3044C15.5445 16.5648 15.1224 16.5648 14.8621 16.3044L14.2788 15.7211C14.0184 15.4607 14.0184 15.0386 14.2788 14.7783ZM10.0002 16.4997C10.3684 16.4997 10.6668 16.7982 10.6668 17.1663V17.9997C10.6668 18.3679 10.3684 18.6663 10.0002 18.6663C9.63197 18.6663 9.3335 18.3679 9.3335 17.9997V17.1663C9.3335 16.7982 9.63197 16.4997 10.0002 16.4997Z"
        fill="#AFAFAF"
      />
    </svg>
  );

  return (
    <div className={clsx(styles.toggle, className)}>
      <Switch
        onChange={() => onChange(value === "dark" ? "light" : "dark")}
        checked={value === "dark"}
        disabled={!isBrowser}
        handleDiameter={22}
        title={title}
        aria-label={title}
        checkedIcon={checkedIcon}
        uncheckedIcon={uncheckedIcon}
        onHandleColor={"#25282D"}
        offHandleColor={"#FFFFFF"}
        activeBoxShadow={"0 0 2px 3px #FF6C3E"}
        aria-live="polite"
        offColor={"#25282D"}
        onColor={"#FFFFFF"}
      />
    </div>
  );
}
export default React.memo(ColorModeToggle);
