version: 2.1

executors:
  golang:
    docker:
      - image: circleci/golang:1.14

commands:
  make:
    parameters:
      description:
        type: string
      target:
        type: string
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - restore_cache:
          name: "Restore source code cache"
          keys:
            - go-src-v1-{{ .Revision }}
      - checkout
      - restore_cache:
          name: "Restore go modules cache"
          keys:
            - go-mod-v2-{{ checksum "go.sum" }}
      - run:
          name: << parameters.description >>
          command: |
            make << parameters.target >>



jobs:
  setup-dependencies:
    executor: golang
    steps:
      - checkout
      - restore_cache:
          name: "Restore go modules cache"
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Cache go modules
          command: make go-mod-cache
      - run:
          name: Build
          command: make build
      - run:
          name: "Git garbage collection"
          command: git gc
      - run:
          name: "Build tools binaries"
          command: |
            make tools
      - save_cache:
          name: "Save go modules cache"
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - save_cache:
          name: "Save source code cache"
          key: go-src-v1-{{ .Revision }}
          paths:
            - ".git"
      - run:
          command: |
            mkdir -p /tmp/bin
            cp -r /go/bin/* /tmp/bin
      - persist_to_workspace:
          root: "/tmp/bin"
          paths:
            - "."
  test-sim-multi-seed-long:
    executor: golang
    steps:
      - make:
          target: test-sim-multi-seed-long
          description: "Test Desmos multi-seed simulation (long-lived)"

  docker-image:
    executor: golang
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          DESMOSD_VERSION=''
          if [ "${CIRCLE_BRANCH}" = "master" ]; then
            DESMOSD_VERSION="stable latest"
          elif [ "${CIRCLE_BRANCH}" = "develop" ]; then
            DESMOSD_VERSION="develop"
          elif [[ "${CIRCLE_BRANCH}" == release/v* ]]; then
            DESMOSD_VERSION="${CIRCLE_BRANCH}"
          fi

          if [ -z "${DESMOSD_VERSION}" ]; then
            docker build .
          else
            for VERSION in $DESMOSD_VERSION; do
              docker build -t desmoslabs/desmos:$VERSION .
              echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
              docker push desmoslabs/desmos:$VERSION
            done
          fi
  docker-tagged:
    executor: golang
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          docker build -t desmoslabs/desmos:$CIRCLE_TAG .
          echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
          docker push desmoslabs/desmos:$CIRCLE_TAG


workflows:
  version: 2
  test-suite:
    jobs:
      - docker-image:
          requires:
            - setup-dependencies
      - docker-tagged:
          filters:
            tags:
              only:
                - /^v.*/
            branches:
              ignore:
                - /.*/
          requires:
            - setup-dependencies
      - setup-dependencies:
          # filters here are needed to enable this job also for tags
          filters:
            tags:
              only:
                - /^v.*/
      - test-sim-multi-seed-long:
          requires:
            - setup-dependencies
          # These filters ensure that the long sim only runs during release
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v.*/
