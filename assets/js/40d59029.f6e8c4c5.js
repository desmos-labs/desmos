"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[15879],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var s=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,s,l=function(e,n){if(null==e)return{};var t,s,l={},a=Object.keys(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=s.createContext({}),p=function(e){var n=s.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=p(e.components);return s.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},d=s.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(t),m=l,h=d["".concat(i,".").concat(m)]||d[m]||c[m]||a;return t?s.createElement(h,r(r({ref:n},u),{},{components:t})):s.createElement(h,r({ref:n},u))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,r=new Array(a);r[0]=d;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var p=2;p<a;p++)r[p]=t[p];return s.createElement.apply(null,r)}return s.createElement.apply(null,t)}d.displayName="MDXCreateElement"},78070:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>u});t(67294);var s=t(3905);function l(){return l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e},l.apply(this,arguments)}function a(e,n){if(null==e)return{};var t,s,l=function(e,n){if(null==e)return{};var t,s,l={},a=Object.keys(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)t=a[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}const r={id:"client",title:"Client",sidebar_label:"Client",slug:"client"},o="Client",i={unversionedId:"developers/modules/relationships/client",id:"version-4.2.0/developers/modules/relationships/client",title:"Client",description:"CLI",source:"@site/versioned_docs/version-4.2.0/02-developers/02-modules/relationships/06-client.md",sourceDirName:"02-developers/02-modules/relationships",slug:"/developers/modules/relationships/client",permalink:"/4.2.0/developers/modules/relationships/client",draft:!1,editUrl:"https://github.com/desmos-labs/desmos/tree/master/docs/versioned_docs/version-4.2.0/02-developers/02-modules/relationships/06-client.md",tags:[],version:"4.2.0",sidebarPosition:6,frontMatter:{id:"client",title:"Client",sidebar_label:"Client",slug:"client"},sidebar:"docs",previous:{title:"Events",permalink:"/4.2.0/developers/modules/relationships/events"},next:{title:"Overview",permalink:"/4.2.0/developers/modules/subspaces/overview"}},p={},u=[{value:"CLI",id:"cli",level:2},{value:"Query",id:"query",level:3},{value:"relationships",id:"relationships",level:4},{value:"blocks",id:"blocks",level:4},{value:"Transactions",id:"transactions",level:3},{value:"create-relationship",id:"create-relationship",level:4},{value:"delete-relationship",id:"delete-relationship",level:4},{value:"block",id:"block",level:4},{value:"unblock",id:"unblock",level:4},{value:"gRPC",id:"grpc",level:2},{value:"Relationships",id:"relationships-1",level:3},{value:"Blocks",id:"blocks-1",level:3},{value:"REST",id:"rest",level:2},{value:"Relationships",id:"relationships-2",level:2},{value:"Blocks",id:"blocks-2",level:2}],c={toc:u};function d(e){var{components:n}=e,t=a(e,["components"]);return(0,s.kt)("wrapper",l({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",l({},{id:"client"}),"Client"),(0,s.kt)("h2",l({},{id:"cli"}),"CLI"),(0,s.kt)("p",null,"A user can query and interact with the ",(0,s.kt)("inlineCode",{parentName:"p"},"relationships")," module using the CLI. "),(0,s.kt)("h3",l({},{id:"query"}),"Query"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"query")," commands allow users to query the ",(0,s.kt)("inlineCode",{parentName:"p"},"relationships")," state. "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos query relationships --help\n")),(0,s.kt)("h4",l({},{id:"relationships"}),"relationships"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"relationships")," command allows user to query the relationships inside a subspace having a specific id, providing an optional creator and counterparty. "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos query relationships [subspace-id] [[creator]] [[counterparty]] [flags]\n")),(0,s.kt)("p",null,"Example: "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos query relationships relationships 1 desmos1... desmos1...\n")),(0,s.kt)("p",null,"Example Output: "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-yaml"}),'pagination:\n  next_key: null\n  total: "0"\nrelationships:\n- counterparty: desmos1tamzg6rfj9wlmqhthgfmn9awq0d8ssgfr8fjns\n  creator: desmos13yp2fq3tslq6mmtq4628q38xzj75ethzela9uu\n  subspace_id: "1"\n')),(0,s.kt)("h4",l({},{id:"blocks"}),"blocks"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"blocks")," command allows to query the user blocks stored inside a subspace having a given id, providing an optional blocker and blocked addresses."),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos query relationships blocks [subspace-id] [[blocker]] [[blocked]] [flags]\n")),(0,s.kt)("p",null,"Example: "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos query relationships blocks 1 desmos1... desmos1...\n")),(0,s.kt)("p",null,"Example Output: "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-yaml"}),'blocks:\n  - blocked: desmos1tamzg6rfj9wlmqhthgfmn9awq0d8ssgfr8fjns\n    blocker: desmos13yp2fq3tslq6mmtq4628q38xzj75ethzela9uu\n    reason: ""\n    subspace_id: "1"\npagination:\n  next_key: null\n  total: "0"\n')),(0,s.kt)("h3",l({},{id:"transactions"}),"Transactions"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"tx")," commands allow users to interact with the ",(0,s.kt)("inlineCode",{parentName:"p"},"relationships")," module. "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos tx relationships --help\n")),(0,s.kt)("h4",l({},{id:"create-relationship"}),"create-relationship"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"create-relationship")," allows users to create a relationship with another user inside a specific subspace."),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos tx relationships create-relationship [counterparty] [subspace-id] [flags]\n")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos tx relationships create-relationship desmos1... 1\n")),(0,s.kt)("h4",l({},{id:"delete-relationship"}),"delete-relationship"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"delete-relationship")," allows users to delete an existing relationship. "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos tx relationships delete-relationship [counterparty] [subspace-id] [flags]\n")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos tx relationships delete-relationship desmos1... 1\n")),(0,s.kt)("h4",l({},{id:"block"}),"block"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"block")," command allows users to block another user inside a specific subspace, optionally providing a reason. "),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos tx relationships block [address] [subspace] [[reason]] [flags]\n")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'desmos tx relationships block desmos1... 1 "My reason"\n')),(0,s.kt)("h4",l({},{id:"unblock"}),"unblock"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"unblock")," command allows users to unblock a previously blocked user."),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos tx relationships unblock [address] [subspace] [flags]\n")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos tx relationships unblock desmos1... 1\n")),(0,s.kt)("h2",l({},{id:"grpc"}),"gRPC"),(0,s.kt)("p",null,"A user can query the ",(0,s.kt)("inlineCode",{parentName:"p"},"relationships")," module gRPC endpoints."),(0,s.kt)("h3",l({},{id:"relationships-1"}),"Relationships"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Relationships")," endpoint allows users to query for the relationships inside a subspace having a given id, optionally providing user and counterparty addresses."),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos.relationships.v1.Query/Relationships\n")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'grpcurl -plaintext \\\n  -d \'{"subspace_id": "1"}\' localhost:9090 desmos.relationships.v1.Query/Relationships\n')),(0,s.kt)("p",null,"Example Output:"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-json"}),'{\n  "relationships": [\n    {\n      "creator": "desmos13yp2fq3tslq6mmtq4628q38xzj75ethzela9uu",\n      "counterparty": "desmos1tamzg6rfj9wlmqhthgfmn9awq0d8ssgfr8fjns",\n      "subspaceId": "1"\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,s.kt)("h3",l({},{id:"blocks-1"}),"Blocks"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"Blocks")," endpoint allows users to query for the user blocks inside a subspace having a given id, optionally providing user and counterparty addresses."),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),"desmos.relationships.v1.Query/Blocks\n")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-bash"}),'grpcurl -plaintext \\\n  -d \'{"subspace_id": "1"}\' localhost:9090 desmos.relationships.v1.Query/Blocks\n')),(0,s.kt)("p",null,"Example Output:"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-json"}),'{\n  "blocks": [\n    {\n      "blocker": "desmos13yp2fq3tslq6mmtq4628q38xzj75ethzela9uu",\n      "blocked": "desmos1tamzg6rfj9wlmqhthgfmn9awq0d8ssgfr8fjns",\n      "subspaceId": "1"\n    }\n  ],\n  "pagination": {\n    "total": "1"\n  }\n}\n')),(0,s.kt)("h2",l({},{id:"rest"}),"REST"),(0,s.kt)("p",null,"A user can query the ",(0,s.kt)("inlineCode",{parentName:"p"},"relationships")," module using REST endpoints. "),(0,s.kt)("h2",l({},{id:"relationships-2"}),"Relationships"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"relationships")," endpoint allows users to query for the relationships inside a subspace having a given id, optionally providing user and counterparty addresses."),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{}),"/desmos/relationships/v1/relationships?subspace_id={subspaceID}&user={userAddress}&counterparty={counterpartyAddress}\n")),(0,s.kt)("h2",l({},{id:"blocks-2"}),"Blocks"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"blocks")," endpoint allows users to query for the user blocks inside a subspace having a given id, optionally providing user and counterparty addresses."),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{}),"/desmos/relationships/v1/blocks?subspace_id={subspaceID}&blocker={blockerAddress}&blocked={blockedAddress}\n")))}d.isMDXComponent=!0}}]);