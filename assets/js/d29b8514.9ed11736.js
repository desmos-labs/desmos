"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[8731],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=o.createContext({}),s=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,h=c["".concat(d,".").concat(m)]||c[m]||u[m]||r;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},71710:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>d,toc:()=>p});n(67294);var o=n(3905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},a.apply(this,arguments)}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const i={id:"migrating",title:"Migrating",sidebar_label:"Migrating",slug:"migrating"},l="Migrating a validator",d={unversionedId:"validators/migrating",id:"validators/migrating",title:"Migrating",description:"In some cases, you might want to move your running validator from one server to another. For example, this might be the case if you find a cheaper alternative or if your host does not meet the requirements.",source:"@site/docs/04-validators/04-migrating.md",sourceDirName:"04-validators",slug:"/validators/migrating",permalink:"/validators/migrating",draft:!1,editUrl:"https://github.com/desmos-labs/desmos/tree/master/docs/docs/04-validators/04-migrating.md",tags:[],version:"current",lastUpdatedAt:1669690424,formattedLastUpdatedAt:"Nov 29, 2022",sidebarPosition:4,frontMatter:{id:"migrating",title:"Migrating",sidebar_label:"Migrating",slug:"migrating"},sidebar:"docs",previous:{title:"Halting",permalink:"/validators/halting"},next:{title:"Common Problems",permalink:"/validators/common-problems"}},s={},p=[{value:"1. Setup new fullnode",id:"1-setup-new-fullnode",level:2},{value:"2. Migrate Data",id:"2-migrate-data",level:2},{value:"Stopping both the validator and the newly synced full node",id:"stopping-both-the-validator-and-the-newly-synced-full-node",level:3},{value:"Backup the following data in the validator node",id:"backup-the-following-data-in-the-validator-node",level:3},{value:"Migrating data to the new fullnode",id:"migrating-data-to-the-new-fullnode",level:3},{value:"Startup the new validator node",id:"startup-the-new-validator-node",level:3},{value:"(Optional) Recover your key",id:"optional-recover-your-key",level:3}],u={toc:p};function c(e){var{components:t}=e,n=r(e,["components"]);return(0,o.kt)("wrapper",a({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",a({},{id:"migrating-a-validator"}),"Migrating a validator"),(0,o.kt)("p",null,"In some cases, you might want to move your running validator from one server to another. For example, this might be the case if you find a cheaper alternative or if your host does not meet the requirements."),(0,o.kt)("p",null,"In this case, what you need to do is following a two-step procedure:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Set and fully sync up a fullnode"),(0,o.kt)("li",{parentName:"ol"},"Migrate data from old node to new node")),(0,o.kt)("h2",a({},{id:"1-setup-new-fullnode"}),"1. Setup new fullnode"),(0,o.kt)("p",null,"To avoid as much missed blocks as possible it is recommended that you setup a new server and fully sync up a full node first. To do this,\nyou can read the guide ",(0,o.kt)("a",a({parentName:"p"},{href:"/fullnode/setup"}),"here"),"."),(0,o.kt)("p",null,"Proceed to step 2 only if your new node has caught up."),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{}),'desmos status 2>&1 | jq "{catching_up: .SyncInfo.catching_up}"\n')),(0,o.kt)("h2",a({},{id:"2-migrate-data"}),"2. Migrate Data"),(0,o.kt)("h3",a({},{id:"stopping-both-the-validator-and-the-newly-synced-full-node"}),"Stopping both the validator and the newly synced full node"),(0,o.kt)("p",null,"In order to avoid as much side affects as possible we will be stopping both nodes."),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{}),"systemctl stop desmos\n")),(0,o.kt)("h3",a({},{id:"backup-the-following-data-in-the-validator-node"}),"Backup the following data in the validator node"),(0,o.kt)("p",null,"In order to properly migrate our validator node to another server we will need to backup the following data:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The validator private key.\nThis is located inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.desmos/config/priv_validator_key.json")," file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The validator consensus state.\nThis is located inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.desmos/data/priv_validator_state.json")," file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"If you keep your keys on the node make sure you have the secret recovery phrase (mnemonic phrase) associated with your key(s)."))),(0,o.kt)("admonition",a({},{title:"Do not delete your old node yet",type:"tip"}),(0,o.kt)("p",{parentName:"admonition"},"We highly suggest you to delete your old node instance once that the new node is running properly. This will allow you to recover any information if you forgot to do so.")),(0,o.kt)("h3",a({},{id:"migrating-data-to-the-new-fullnode"}),"Migrating data to the new fullnode"),(0,o.kt)("p",null,"With both nodes stopped we will be copying the backed up data in to the newly synced fullnode."),(0,o.kt)("admonition",a({},{title:"Warning",type:"warning"}),(0,o.kt)("p",{parentName:"admonition"},"At this point, both nodes should not be running. This is to prevent any possible side effects such as double signing")),(0,o.kt)("p",null,"Transfer the following backed up files from the old node to the new node:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"~/.desmos/config/priv_validator_key.json")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"~/.desmos/data/priv_validator_state.json"))),(0,o.kt)("h3",a({},{id:"startup-the-new-validator-node"}),"Startup the new validator node"),(0,o.kt)("p",null,"Once you have moved your ",(0,o.kt)("inlineCode",{parentName:"p"},"priv_validator_key.json")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"priv_validator_state")," to the newly synced fullnode, it will be recognized as the same validator node."),(0,o.kt)("admonition",a({},{title:"Warning",type:"warning"}),(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"priv_validator_key")," should only be online from a single instance. A good practice would be to remove or rename the ",(0,o.kt)("inlineCode",{parentName:"p"},"priv_validator_key.json")," in the old node so that even if you accidentally start running both nodes, the validator key would only be online for one of them.")),(0,o.kt)("p",null,"With the old validator node stopped, start up the new node:"),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{}),"sudo systemctl start desmos\n")),(0,o.kt)("admonition",a({},{title:"Wait before deleting the old node",type:"warning"}),(0,o.kt)("p",{parentName:"admonition"},"We suggest you to wait before deleting the old node. Instead of waiting only to see the blocks syncing, make sure your new node is actually signing blocks as your validator. You will see this by looking at your validator uptime on our ",(0,o.kt)("a",a({parentName:"p"},{href:"https://morpheus.desmos.network/validators"}),"explorer"),". If everything is working properly, the uptime should slowly increase.")),(0,o.kt)("h3",a({},{id:"optional-recover-your-key"}),"(Optional) Recover your key"),(0,o.kt)("p",null,"If you originally had your key in the previous server you can easily add it back using the secret recovery phrase (mnemonic phrase) you had backed up"),(0,o.kt)("pre",null,(0,o.kt)("code",a({parentName:"pre"},{}),"desmos keys add <key_name> --recover\n")))}c.isMDXComponent=!0}}]);