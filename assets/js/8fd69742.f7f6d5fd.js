"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[80469],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},_=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),_=c(n),m=a,u=_["".concat(p,".").concat(m)]||_[m]||d[m]||o;return n?r.createElement(u,i(i({ref:t},s),{},{components:n})):r.createElement(u,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=_;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}_.displayName="MDXCreateElement"},41325:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>_,frontMatter:()=>i,metadata:()=>p,toc:()=>s});n(67294);var r=n(3905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const i={id:"text-comparison-exp",title:"_text_comparison_exp",hide_table_of_contents:!1},l=void 0,p={unversionedId:"graphql/inputs/text-comparison-exp",id:"version-4.2.0/graphql/inputs/text-comparison-exp",title:"_text_comparison_exp",description:"Boolean expression to compare columns of type \"_text\". All fields are combined with logical 'AND'.",source:"@site/versioned_docs/version-4.2.0/07-graphql/inputs/text-comparison-exp.mdx",sourceDirName:"07-graphql/inputs",slug:"/graphql/inputs/text-comparison-exp",permalink:"/4.2.0/graphql/inputs/text-comparison-exp",draft:!1,editUrl:"https://github.com/desmos-labs/desmos/tree/master/docs/versioned_docs/version-4.2.0/07-graphql/inputs/text-comparison-exp.mdx",tags:[],version:"4.2.0",frontMatter:{id:"text-comparison-exp",title:"_text_comparison_exp",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"subspace_user_permission_order_by",permalink:"/4.2.0/graphql/inputs/subspace-user-permission-order-by"},next:{title:"timestamp_comparison_exp",permalink:"/4.2.0/graphql/inputs/timestamp-comparison-exp"}},c={},s=[{value:"Fields",id:"fields",level:3},{value:"<code>_eq</code> (<code>_text</code>)",id:"_eq-_text",level:4},{value:"<code>_gt</code> (<code>_text</code>)",id:"_gt-_text",level:4},{value:"<code>_gte</code> (<code>_text</code>)",id:"_gte-_text",level:4},{value:"<code>_in</code> (<code>[_text!]</code>)",id:"_in-_text",level:4},{value:"<code>_is_null</code> (<code>Boolean</code>)",id:"_is_null-boolean",level:4},{value:"<code>_lt</code> (<code>_text</code>)",id:"_lt-_text",level:4},{value:"<code>_lte</code> (<code>_text</code>)",id:"_lte-_text",level:4},{value:"<code>_neq</code> (<code>_text</code>)",id:"_neq-_text",level:4},{value:"<code>_nin</code> (<code>[_text!]</code>)",id:"_nin-_text",level:4}],d={toc:s};function _(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)("wrapper",a({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Boolean expression to compare columns of type \"_text\". All fields are combined with logical 'AND'."),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-graphql"}),"input _text_comparison_exp {\n  _eq: _text\n  _gt: _text\n  _gte: _text\n  _in: [_text!]\n  _is_null: Boolean\n  _lt: _text\n  _lte: _text\n  _neq: _text\n  _nin: [_text!]\n}\n")),(0,r.kt)("h3",a({},{id:"fields"}),"Fields"),(0,r.kt)("h4",a({},{id:"_eq-_text"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_eq"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/text"}),(0,r.kt)("inlineCode",{parentName:"a"},"_text")),")"),(0,r.kt)("h4",a({},{id:"_gt-_text"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_gt"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/text"}),(0,r.kt)("inlineCode",{parentName:"a"},"_text")),")"),(0,r.kt)("h4",a({},{id:"_gte-_text"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_gte"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/text"}),(0,r.kt)("inlineCode",{parentName:"a"},"_text")),")"),(0,r.kt)("h4",a({},{id:"_in-_text"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_in"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/text"}),(0,r.kt)("inlineCode",{parentName:"a"},"[_text!]")),")"),(0,r.kt)("h4",a({},{id:"_is_null-boolean"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_is_null"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/boolean"}),(0,r.kt)("inlineCode",{parentName:"a"},"Boolean")),")"),(0,r.kt)("h4",a({},{id:"_lt-_text"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_lt"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/text"}),(0,r.kt)("inlineCode",{parentName:"a"},"_text")),")"),(0,r.kt)("h4",a({},{id:"_lte-_text"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_lte"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/text"}),(0,r.kt)("inlineCode",{parentName:"a"},"_text")),")"),(0,r.kt)("h4",a({},{id:"_neq-_text"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_neq"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/text"}),(0,r.kt)("inlineCode",{parentName:"a"},"_text")),")"),(0,r.kt)("h4",a({},{id:"_nin-_text"}),(0,r.kt)("a",a({parentName:"h4"},{href:"#"}),(0,r.kt)("inlineCode",{parentName:"a"},"_nin"))," (",(0,r.kt)("a",a({parentName:"h4"},{href:"../scalars/text"}),(0,r.kt)("inlineCode",{parentName:"a"},"[_text!]")),")"))}_.isMDXComponent=!0}}]);