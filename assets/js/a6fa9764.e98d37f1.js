"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[81771],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(r),m=l,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},10455:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});r(67294);var n=r(3905);function l(){return l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},l.apply(this,arguments)}function a(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}const o={},i="ADR 009: Supply module",s={unversionedId:"architecture/adr-009-supply-module",id:"architecture/adr-009-supply-module",title:"ADR 009: Supply module",description:"Changelog",source:"@site/docs/architecture/adr-009-supply-module.md",sourceDirName:"architecture",slug:"/architecture/adr-009-supply-module",permalink:"/architecture/adr-009-supply-module",draft:!1,editUrl:"https://github.com/desmos-labs/desmos/tree/master/docs/docs/architecture/adr-009-supply-module.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"ADR 008: Fees modules",permalink:"/architecture/adr-008-fee-module"},next:{title:"ADR 010: Posts module",permalink:"/architecture/adr-010-posts-module"}},u={},p=[{value:"Changelog",id:"changelog",level:2},{value:"Status",id:"status",level:2},{value:"Abstract",id:"abstract",level:2},{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Queries",id:"queries",level:3},{value:"Total Supply",id:"total-supply",level:4},{value:"Current supply",id:"current-supply",level:4},{value:"Consequences",id:"consequences",level:2},{value:"Positive",id:"positive",level:3},{value:"Test Cases",id:"test-cases",level:2},{value:"References",id:"references",level:2}],c={toc:p};function d(e){var{components:t}=e,r=a(e,["components"]);return(0,n.kt)("wrapper",l({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",l({},{id:"adr-009-supply-module"}),"ADR 009: Supply module"),(0,n.kt)("h2",l({},{id:"changelog"}),"Changelog"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"March 21st, 2022: Initial draft;"),(0,n.kt)("li",{parentName:"ul"},"March 21st, 2022: First review;"),(0,n.kt)("li",{parentName:"ul"},"March 21st, 2022: Second review;"),(0,n.kt)("li",{parentName:"ul"},"April 04th, 2022: Third review.")),(0,n.kt)("h2",l({},{id:"status"}),"Status"),(0,n.kt)("p",null,"ACCEPTED Implemented"),(0,n.kt)("h2",l({},{id:"abstract"}),"Abstract"),(0,n.kt)("p",null,"This ADR defines the ",(0,n.kt)("inlineCode",{parentName:"p"},"x/supply")," module which will expose a set of APIs that can be called by data aggregator websites (such as CoinGecko and CoinMarketCap) in order to fetch updated data about a specific supply."),(0,n.kt)("h2",l({},{id:"context"}),"Context"),(0,n.kt)("p",null,"Currently, inside our ",(0,n.kt)("a",l({parentName:"p"},{href:"https://www.coingecko.com/en/coins/desmos"}),"CoinGecko")," and ",(0,n.kt)("a",l({parentName:"p"},{href:"https://coinmarketcap.com/currencies/desmos/"}),"CoinMarketCap")," some important information about current and total supply are missing or not correctly updated. To solve this, we can implement a series of APIs that read those data from the chain. Data aggregator websites that have the token listed can later use them."),(0,n.kt)("h2",l({},{id:"decision"}),"Decision"),(0,n.kt)("p",null,"The APIs will be exposed in a new module called ",(0,n.kt)("inlineCode",{parentName:"p"},"x/supply")," that will have the purpose to fetch the given information using different Cosmos SDK modules (namely ",(0,n.kt)("inlineCode",{parentName:"p"},"x/bank"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"x/distribution"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"x/staking"),") and apply some conversions on them in order to display them the best way possible for the client."),(0,n.kt)("h3",l({},{id:"queries"}),"Queries"),(0,n.kt)("p",null,"All the following APIs will have a custom param named ",(0,n.kt)("inlineCode",{parentName:"p"},"divider-exponent")," that allows to set the divider exponent to be used when returning the values. A ",(0,n.kt)("inlineCode",{parentName:"p"},"divider-exponent")," of ",(0,n.kt)("inlineCode",{parentName:"p"},"0")," will identify the whole token amount, while a divider exponent of ",(0,n.kt)("inlineCode",{parentName:"p"},"3")," will return the result divided by ",(0,n.kt)("inlineCode",{parentName:"p"},"10^3"),"."),(0,n.kt)("h4",l({},{id:"total-supply"}),"Total Supply"),(0,n.kt)("p",null,"This query will fetch the total supply of a given token ",(0,n.kt)("inlineCode",{parentName:"p"},"denom"),"."),(0,n.kt)("h4",l({},{id:"current-supply"}),"Current supply"),(0,n.kt)("p",null,"This query will return the circulating supply by subtracting the total vested tokens amount and community pool amount from the total supply of the given token."),(0,n.kt)("h2",l({},{id:"consequences"}),"Consequences"),(0,n.kt)("h3",l({},{id:"positive"}),"Positive"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"All the chain nodes will expose these APIs automatically after their node updates;"),(0,n.kt)("li",{parentName:"ul"},"No state-breaking changes introduced;"),(0,n.kt)("li",{parentName:"ul"},"Easily extensible.")),(0,n.kt)("h2",l({},{id:"test-cases"}),"Test Cases"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Check API to correctly return the converted total Supply from millionth to non-millionth representation;"),(0,n.kt)("li",{parentName:"ul"},"Check API to correctly return the current supply.")),(0,n.kt)("h2",l({},{id:"references"}),"References"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Issue ",(0,n.kt)("a",l({parentName:"li"},{href:"https://github.com/desmos-labs/desmos/issues/773"}),"#733"),".")))}d.isMDXComponent=!0}}]);