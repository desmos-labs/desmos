"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[34205],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,h=c["".concat(s,".").concat(u)]||c[u]||m[u]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},85460:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>d});n(67294);var a=n(3905);function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const i={id:"state-sync",title:"State Sync",sidebar_label:"State Sync",slug:"state-sync"},l="State sync testnet",s={unversionedId:"testnet/join-public/state-sync",id:"version-4.2.0/testnet/join-public/state-sync",title:"State Sync",description:"The following seed nodes are to be used when configuring a full node for the testnet. If you are looking for mainnet seed nodes, please refer to this instead.",source:"@site/versioned_docs/version-4.2.0/05-testnet/03-join-public/04-state-sync.md",sourceDirName:"05-testnet/03-join-public",slug:"/testnet/join-public/state-sync",permalink:"/4.2.0/testnet/join-public/state-sync",draft:!1,editUrl:"https://github.com/desmos-labs/desmos/tree/master/docs/versioned_docs/version-4.2.0/05-testnet/03-join-public/04-state-sync.md",tags:[],version:"4.2.0",sidebarPosition:4,frontMatter:{id:"state-sync",title:"State Sync",sidebar_label:"State Sync",slug:"state-sync"},sidebar:"docs",previous:{title:"Seeds",permalink:"/4.2.0/testnet/join-public/seeds"},next:{title:"Full Sync",permalink:"/4.2.0/testnet/join-public/full-sync"}},p={},d=[],m={toc:d};function c(e){var{components:t}=e,n=o(e,["components"]);return(0,a.kt)("wrapper",r({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",r({},{id:"state-sync-testnet"}),"State sync testnet"),(0,a.kt)("admonition",r({},{title:"Testnet only   ",type:"caution"}),(0,a.kt)("p",{parentName:"admonition"},"The following seed nodes are to be used when configuring a full node for the ",(0,a.kt)("strong",{parentName:"p"},"testnet"),". If you are looking for mainnet seed nodes, please refer to ",(0,a.kt)("a",r({parentName:"p"},{href:"/4.2.0/mainnet/state-sync"}),"this")," instead.")),(0,a.kt)("p",null,"In order to use this feature, you will have to edit a couple of things inside your ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.desmos/config/config.toml")," file,\nunder the ",(0,a.kt)("inlineCode",{parentName:"p"},"statesync")," section:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Enable state sync by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"enable=true"),";")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set the RPC addresses from where to get the snapshots using the ",(0,a.kt)("inlineCode",{parentName:"p"},"rpc_servers")," field to\n",(0,a.kt)("inlineCode",{parentName:"p"},"seed-4.morpheus.desmos.network:26657,seed-5.morpheus.desmos.network:26657"),".",(0,a.kt)("br",{parentName:"p"}),"\n","These are two of our fullnodes that are set up to create periodic snapshots every 600 blocks;")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Get a trusted chain height, and the associated block hash. To do this, you will have to:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Get the current chain height by running:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",r({parentName:"pre"},{className:"language-bash"}),'curl -s http://seed-4.morpheus.desmos.network:26657/commit | jq "{height: .result.signed_header.header.height}"\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Once you have the current chain height, get a height that is a little lower (200 blocks) than the current one.",(0,a.kt)("br",{parentName:"p"}),"\n","To do this you can execute:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",r({parentName:"pre"},{className:"language-bash"}),'curl -s http://seed-4.morpheus.desmos.network:26657/commit?height=<your-height> | jq "{height: .result.signed_header.header.height, hash: .result.signed_header.commit.block_id.hash}"\n\n# Example\n# curl -s http://seed-4.morpheus.desmos.network:26657/commit?height=100000 | jq "{height: .result.signed_header.header.height, hash: .result.signed_header.commit.block_id.hash}"\n')))),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Now that you have a trusted height and block hash, use those values as the ",(0,a.kt)("inlineCode",{parentName:"p"},"trust_height")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"trust_hash")," values. Also,\nmake sure they're the right values for the Desmos version you're starting to synchronize:"),(0,a.kt)("table",{parentName:"li"},(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",r({parentName:"tr"},{align:"left"}),(0,a.kt)("strong",{parentName:"th"},"State sync height range")),(0,a.kt)("th",r({parentName:"tr"},{align:"left"}),(0,a.kt)("strong",{parentName:"th"},"Desmos version")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"0 - 1235764")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v0.17.0"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"1235765 - 1415529")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v0.17.4"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"1415530 - 2121235")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v0.17.6"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"2121236 - 2226899")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v1.0.4"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"2226900 - 2589024")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v2.0.0"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"2589025 - 2643234")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v2.1.0"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"2643235 - 2756259")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v2.2.0"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"2756260 - 3130831")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v2.3.0"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"2756260 - 3130831")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v2.3.0"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"3130831 - 5842610")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v2.3.1"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"5842610 - 6233130")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v3.2.0"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"6233130 - 6339185")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v4.0.1"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"> 6339185")),(0,a.kt)("td",r({parentName:"tr"},{align:"left"}),(0,a.kt)("inlineCode",{parentName:"td"},"v4.1.0"))))))))),(0,a.kt)("p",null,"Here is an example of what the ",(0,a.kt)("inlineCode",{parentName:"p"},"statesync")," section of your ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.desmos/config/config.toml")," file should look like in the end (the ",(0,a.kt)("inlineCode",{parentName:"p"},"trust_height")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"trust_hash")," should contain your values instead):"),(0,a.kt)("pre",null,(0,a.kt)("code",r({parentName:"pre"},{className:"language-toml"}),'enable = true\n\nrpc_servers = "seed-4.morpheus.desmos.network:26657,seed-5.morpheus.desmos.network:26657"\ntrust_height = 16962\ntrust_hash = "E8ED7A890A64986246EEB02D7D8C4A6D497E3B60C0CAFDDE30F2EE385204C314"\ntrust_period = "336h0m0s"\n')))}c.isMDXComponent=!0}}]);