"use strict";(self.webpackChunkdesmos_docs=self.webpackChunkdesmos_docs||[]).push([[65870],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>d});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),a=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=a(e.components);return n.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=a(t),d=o,v=f["".concat(p,".").concat(d)]||f[d]||u[d]||i;return t?n.createElement(v,l(l({ref:r},c),{},{components:t})):n.createElement(v,l({ref:r},c))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=f;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var a=2;a<i;a++)l[a]=t[a];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},23670:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>p,toc:()=>c});t(67294);var n=t(3905);function o(){return o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},o.apply(this,arguments)}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const l={id:"profile-pictures",title:"Profile pictures",sidebar_label:"Profile pictures",slug:"profile-pictures"},s="Pictures",p={unversionedId:"developers/types/profiles/profile-pictures",id:"version-2.3/developers/types/profiles/profile-pictures",title:"Profile pictures",description:"Picture contains the data of a user profile's related pictures.",source:"@site/versioned_docs/version-2.3/02-developers/02-types/profiles/profile-pictures.md",sourceDirName:"02-developers/02-types/profiles",slug:"/developers/types/profiles/profile-pictures",permalink:"/2.3/developers/types/profiles/profile-pictures",draft:!1,editUrl:"https://github.com/desmos-labs/desmos/tree/master/docs/versioned_docs/version-2.3/02-developers/02-types/profiles/profile-pictures.md",tags:[],version:"2.3",frontMatter:{id:"profile-pictures",title:"Profile pictures",sidebar_label:"Profile pictures",slug:"profile-pictures"},sidebar:"version-2.3/docs",previous:{title:"Profile",permalink:"/2.3/developers/types/profiles/profile"},next:{title:"DTag transfer request",permalink:"/2.3/developers/types/profiles/dtag-transfer-request"}},a={},c=[{value:"Contained data",id:"contained-data",level:2},{value:"<code>Profile</code> (<code>string</code>)",id:"profile-string",level:3},{value:"<code>Cover</code> (<code>string</code>)",id:"cover-string",level:3}],u={toc:c};function f(e){var{components:r}=e,t=i(e,["components"]);return(0,n.kt)("wrapper",o({},u,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",o({},{id:"pictures"}),"Pictures"),(0,n.kt)("p",null,"Picture contains the data of a user profile's related pictures."),(0,n.kt)("h2",o({},{id:"contained-data"}),"Contained data"),(0,n.kt)("p",null,"Picture contains two fields that are both optional."),(0,n.kt)("h3",o({},{id:"profile-string"}),(0,n.kt)("inlineCode",{parentName:"h3"},"Profile")," (",(0,n.kt)("inlineCode",{parentName:"h3"},"string"),")"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Profile")," is a valid ",(0,n.kt)("inlineCode",{parentName:"p"},"URI")," that identifies the main profile's picture."),(0,n.kt)("h3",o({},{id:"cover-string"}),(0,n.kt)("inlineCode",{parentName:"h3"},"Cover")," (",(0,n.kt)("inlineCode",{parentName:"h3"},"string"),")"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Cover")," is a valid ",(0,n.kt)("inlineCode",{parentName:"p"},"URI")," representing the profile's cover."))}f.isMDXComponent=!0}}]);