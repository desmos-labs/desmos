syntax = "proto3";
package desmos.profiles.v3;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "desmos/profiles/v3/models_chain_links.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/desmos-labs/desmos/v4/x/profiles/types";

// QueryChainLinksRequest represents the request that should be used in order
// to retrieve the link associated with the provided user, for the given chain
// and having the given target address
message QueryChainLinksRequest {
  // (optional) User represents the Desmos address of the user to which search
  // the link for
  string user = 1;

  // (optional) ChainName contains the name of the chain to which search the
  // link for. Used only if user is also set
  string chain_name = 2;

  // (optional) Target must contain the external address to which query the link
  // for. Used only if chain name is also set
  string target = 3;

  // Pagination defines an optional pagination for the request
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

// QueryChainLinksResponse is the response type for the
// Query/ChainLinks RPC method.
message QueryChainLinksResponse {
  repeated ChainLink links = 1 [ (gogoproto.nullable) = false ];

  // Pagination defines the pagination response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryChainLinkOwnersRequest contains the data of the request that can
// be used to get chain link owners
message QueryChainLinkOwnersRequest {
  // (Optional) Chain name to search link owners of. If not specified, all
  // links stored will be searched instead.
  string chain_name = 1;

  // (Optional) External address to search for. This will only be used if the
  // chain name is specified as well
  string target = 2;

  // Pagination defines an optional pagination for the request
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryChainLinkOwnersResponse contains the data returned by the request
// allowing to get chain link owners.
message QueryChainLinkOwnersResponse {
  // ChainLinkOwnerDetails contains the details of a single chain link owner
  message ChainLinkOwnerDetails {
    string user = 1;
    string chain_name = 2;
    string target = 3;
  }

  // Addresses of the chain links owners
  repeated ChainLinkOwnerDetails owners = 1 [ (gogoproto.nullable) = false ];

  // Pagination defines the pagination response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDefaultExternalAddressesRequest is the request type for
// Query/DefaultExternalAddresses RPC method
message QueryDefaultExternalAddressesRequest {
  // (Optional) Owner for which to query the default addresses
  string owner = 1;

  // (Optional) Chain name to query the default address for
  string chain_name = 2;

  // Pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryDefaultExternalAddressesResponse is the response type for
// Query/DefaultExternalAddresses RPC method
message QueryDefaultExternalAddressesResponse {
  // List of default addresses, each one represented by the associated chain
  // link
  repeated ChainLink links = 1 [ (gogoproto.nullable) = false ];

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}