syntax = "proto3";
package desmos.profiles.v3;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "desmos/profiles/v3/models_chain_links.proto";

option go_package = "github.com/desmos-labs/desmos/v4/x/profiles/types";

// LinkChainAccountPacketData defines the object that should be sent inside a
// MsgSendPacket when wanting to link an external chain to a Desmos profile
// using IBC
message LinkChainAccountPacketData {
  option (gogoproto.goproto_getters) = false;

  // SourceAddress contains the details of the external chain address
  google.protobuf.Any source_address = 1 [
    (gogoproto.moretags) = "yaml:\"source_address\"",
    (cosmos_proto.accepts_interface) = "AddressData"
  ];

  // SourceProof represents the proof of ownership of the source address
  desmos.profiles.v3.Proof source_proof = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"source_proof\""
  ];

  // SourceChainConfig contains the details of the source chain
  desmos.profiles.v3.ChainConfig source_chain_config = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"source_chain_config\""
  ];

  // DestinationAddress represents the Desmos address of the profile that should
  // be linked with the external account
  string destination_address = 4
      [ (gogoproto.moretags) = "yaml:\"destination_address\"" ];

  // DestinationProof contains the proof of ownership of the DestinationAddress
  desmos.profiles.v3.Proof destination_proof = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"destination_proof\""
  ];
}

// LinkChainAccountPacketAck defines a struct for the packet acknowledgment
message LinkChainAccountPacketAck {
  option (gogoproto.goproto_getters) = false;

  // SourceAddress contains the external address that has been linked properly
  // with the profile
  string source_address = 1;
}
