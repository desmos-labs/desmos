syntax = "proto3";
package desmos.profiles.v3;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/desmos-labs/desmos/v5/x/profiles/types";

// MsgRequestDTagTransfer represents the message used to request the DTag
// transfer to another user.
message MsgRequestDTagTransfer {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name)           = "desmos/MsgRequestDTagTransfer";

  // Receiver contains the address of the request receiver that owns the DTag to
  // transfer if the request is accepted
  string receiver = 1 [ (gogoproto.moretags) = "yaml:\"receiver\"" ];

  // Sender contains the address of the request sender that will receive the
  // receiver DTag if the requet is accepted
  string sender = 2 [ (gogoproto.moretags) = "yaml:\"sender\"" ];
}

// MsgRequestDTagTransferResponse defines the Msg/RequestDTagTransfer response
// type.
message MsgRequestDTagTransferResponse {}

// --------------------------------------------------------------------------------------------------------------------

// MsgCancelDTagTransferRequest represents the message used to cancel a DTag
// transfer request.
message MsgCancelDTagTransferRequest {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name)           = "desmos/MsgCancelDTagTransferRequest";

  // Receiver contains the address of the request receiver
  string receiver = 1 [
    (gogoproto.moretags) = "yaml:\"receiver\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];

  // Sender contains the address of the requets sender
  string sender = 2 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
}

// MsgCancelDTagTransferRequestResponse represents the
// Msg/CancelDTagTransferRequest response type.
message MsgCancelDTagTransferRequestResponse {}

// --------------------------------------------------------------------------------------------------------------------

// MsgAcceptDTagTransferRequest represents the message used to accept a DTag
// transfer request.
message MsgAcceptDTagTransferRequest {
  option (cosmos.msg.v1.signer) = "receiver";
  option (amino.name)           = "desmos/MsgAcceptDTagTransferRequest";

  // NewDTag represents the DTag that the request receiver will obtain if they
  // accept the request
  string new_dtag = 1 [
    (gogoproto.moretags) = "yaml:\"new_dtag\"",
    (gogoproto.customname) = "NewDTag"
  ];

  // Sender represents the request sender
  string sender = 2 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];

  // Receiver represents the request receiver
  string receiver = 3 [
    (gogoproto.moretags) = "yaml:\"receiver\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
}

// MsgAcceptDTagTransferRequestResponse defines the
// Msg/AcceptDTagTransferRequest response.
message MsgAcceptDTagTransferRequestResponse {}

// --------------------------------------------------------------------------------------------------------------------

// MsgRefuseDTagTransferRequest represents the message used to refuse a DTag
// transfer request.
message MsgRefuseDTagTransferRequest {
  option (cosmos.msg.v1.signer) = "receiver";
  option (amino.name)           = "desmos/MsgRefuseDTagTransferRequest";

  // Sender represents the request sender
  string sender = 1 [
    (gogoproto.moretags) = "yaml:\"sender\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];

  // Receiver represents the request receiver
  string receiver = 2 [
    (gogoproto.moretags) = "yaml:\"receiver\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
}

// MsgRefuseDTagTransferRequestResponse defines the
// Msg/RefuseDTagTransferRequest response.
message MsgRefuseDTagTransferRequestResponse {}
