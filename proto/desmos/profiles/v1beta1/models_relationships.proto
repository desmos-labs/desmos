syntax = "proto3";
package desmos.profiles.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "desmos/profiles/v1beta1/models_ibc.proto";

option go_package = "github.com/desmos-labs/desmos/x/profiles/types";

// Relationship is the struct of a relationship.
// It represent the concept of "follow" of traditional social networks.
message Relationship {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string creator = 1 [ (gogoproto.moretags) = "yaml:\"creator\"" ];
  string recipient = 2 [ (gogoproto.moretags) = "yaml:\"recipient\"" ];
  string subspace = 3 [ (gogoproto.moretags) = "yaml:\"subspace\"" ];
}

// Relationships wraps a list of Relationship objects
message Relationships {
  repeated Relationship relationships = 1 [ (gogoproto.nullable) = false ];
}

// UserBlock represents the fact that the Blocker has blocked the given Blocked
// user.
message UserBlock {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  // Blocker represents the address of the user blocking another one
  string blocker = 1 [ (gogoproto.moretags) = "yaml:\"blocker\"" ];

  // Blocked represents the address of the blocked user
  string blocked = 2 [ (gogoproto.moretags) = "yaml:\"blocked\"" ];

  // Reason represents the optional reason the user has been blocked for.
  string reason = 3 [ (gogoproto.moretags) = "yaml:\"reason\"" ];

  // Subspace contains the ID of the subspace inside which the user should be
  // blocked
  string subspace = 4 [ (gogoproto.moretags) = "yaml:\"subspace\"" ];
}

// UserBlocks wraps a list of UserBlock objects
message UserBlocks {
  repeated UserBlock blocks = 1 [ (gogoproto.nullable) = false ];
}