syntax = "proto3";
package desmos.profiles.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/desmos-labs/desmos/x/profiles/types";

// Pictures contains the data of a user profile's related pictures
message Pictures {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string profile = 1 [(gogoproto.moretags) = "yaml\"profile\""];
  string cover = 2 [(gogoproto.moretags) = "yaml\"cover\""];
}

// ___________________________________________________________________________________________________________________

// Profile represents a generic first on Desmos, containing the information of a single user
message Profile {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string dtag = 1
  [(gogoproto.moretags) = "yaml:\"dtag\""];

  string moniker = 2
  [(gogoproto.moretags) = "yaml:\"moniker\""];

  string bio = 3
  [(gogoproto.moretags) = "yaml:\"bio\""];

  Pictures pictures = 4
  [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"pictures\""];

  string creator = 5
  [(gogoproto.moretags) = "yaml:\"creator\""];

  google.protobuf.Timestamp creation_date = 6 [
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"creation_date\"",
    (gogoproto.nullable) = false
  ];
}

// ___________________________________________________________________________________________________________________

// DTagTransferRequest represent a dtag transfer request between two users
message DTagTransferRequest {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string dtag_to_trade = 1 [(gogoproto.moretags) = "yaml:\"dtag_to_trade\""];
  string sender = 2 [(gogoproto.moretags) = "yaml:\"sender\""];
  string receiver = 3 [(gogoproto.moretags) = "yaml:\"receiver\""];
}

// ___________________________________________________________________________________________________________________


