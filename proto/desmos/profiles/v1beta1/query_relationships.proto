syntax = "proto3";
package desmos.profiles.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "desmos/profiles/v1beta1/models_relationships.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/desmos-labs/desmos/v2/x/profiles/types";

// QueryRelationshipsRequest is the request type for the
// Query/Relationships RPC method.
message QueryRelationshipsRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // address of the user to query the relationships for
  string user = 1;

  // subspace to query the relationships for
  string subspace_id = 2;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryRelationshipsResponse is the response type for the
// Query/Relationships RPC method.
message QueryRelationshipsResponse {
  repeated desmos.profiles.v1beta1.Relationship relationships = 1
      [ (gogoproto.nullable) = false ];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// ___________________________________________________________________________________________________________________

// QueryBlocksRequest is the request type for the Query/Blocks RPC
// endpoint
message QueryBlocksRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // address of the user to query the blocks for
  string user = 1;
  string subspace_id = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryBlocksResponse is the response type for the Query/Blocks RPC
// method.
message QueryBlocksResponse {
  repeated desmos.profiles.v1beta1.UserBlock blocks = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}