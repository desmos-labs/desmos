syntax = "proto3";
package desmos.reports.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "desmos/reports/v1/models.proto";

option go_package = "github.com/desmos-labs/desmos/v3/x/reports/types";

// Query defines the gRPC querier service.
service Query {
  // Reports allows to query the reports for a specific target
  rpc Reports(QueryReportsRequest) returns (QueryReportsResponse) {
    option (google.api.http).get = "/desmos/reports/v1/{subspace_id}/reports";
  }

  // Reasons allows to query the supported reporting reasons for a subspace
  rpc Reasons(QueryReasonsRequest) returns (QueryReasonsResponse) {
    option (google.api.http).get = "/desmos/reports/v1/{subspace_id}/reasons";
  }

  // Params allows to query the module parameters
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/desmos/reports/v1/params";
  }
}

// QueryReportsResponse is the request type for Query/Reports RPC method
message QueryReportsRequest {
  // Id of the subspace to query the reports for
  uint64 subspace_id = 1;

  // (optional) Target to query the reports for
  google.protobuf.Any target = 2;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryReportsResponse is the response type for Query/Reports RPC method
message QueryReportsResponse {
  repeated Report reports = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryReasonsRequest is the request type for Query/Reasons RPC method
message QueryReasonsRequest {
  // Id of the subspace to query the supported reporting reasons for
  uint64 subspace_id = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryReasonsResponse is the response type for Query/Reasons RPC method
message QueryReasonsResponse {
  repeated Reason reasons = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryParamsRequest is the request type for Query/Params RPC method
message QueryParamsRequest {}

// QueryParamsResponse is the response type for Query/Params RPC method
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}
