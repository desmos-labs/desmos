syntax = "proto3";
package desmos.reports.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/desmos-labs/desmos/x/reports/types";

// Msg defines the reports Msg service.
service Msg {
  // ReportPost defines a method for creating a new post report
  rpc ReportPost(MsgReportPost) returns (MsgReportPostResponse);
}

// ___________________________________________________________________________________________________________________

// MsgReportPost represents a message to create a port report.
message MsgReportPost {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string post_id = 1 [
    (gogoproto.jsontag) = "post_id",
    (gogoproto.moretags) = "yaml:\"post_id\""
  ];

  string report_type = 2 [ (gogoproto.moretags) = "yaml:\"type\"" ];

  string message = 3 [ (gogoproto.moretags) = "yaml:\"message\"" ];

  string user = 4 [ (gogoproto.moretags) = "yaml:\"user\"" ];
}

// MsgReportPostResponse defines the Msg/ReportPost response type.
message MsgReportPostResponse {}
