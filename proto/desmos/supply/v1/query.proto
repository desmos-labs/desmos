syntax = "proto3";
package desmos.supply.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/desmos-labs/desmos/v2/x/supply/types";


// Query defines the gRPC querier service.
service Query {

  // TotalSupply queries the total supply of the given denom, converted with the given divider
  rpc TotalSupply(QueryTotalSupplyRequest)
      returns (QueryTotalSupplyResponse) {
    option (google.api.http).get = "/desmos/supply/v1/total-supply/{denom}/{divider}";
  }

  // CirculatingSupply queries the circulating supply (Total supply - community pool - vesting tokens) of the given
  // denom, converted with the given divider
  rpc CirculatingSupply(QueryCirculatingSupplyRequest)
      returns (QueryCirculatingSupplyResponse) {
    option (google.api.http).get = "/desmos/supply/v1/circulating-supply/{denom}/{divider}";
  }
}

// QueryTotalSupplyRequest is the request type for Query/TotalSupply RPC method
message QueryTotalSupplyRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // coin denom to query the circulating supply for
  string denom = 1;

  // divider is a factor used to convert the supply amount to the desired representation
  int64 divider = 2;
}

// QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC method
message QueryTotalSupplyResponse {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string total_supply = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// QueryCirculatingSupplyRequest is the request type for the Query/CirculatingSupply RPC method
message QueryCirculatingSupplyRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // coin denom to query the circulating supply for
  string denom = 1;

  // divider is a factor used to convert the supply amount to the desired representation
  int64 divider = 2;
}

// QueryCirculatingSupplyRequest is the response type for the Query/CirculatingSupply RPC method
message QueryCirculatingSupplyResponse {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string circulating_supply = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}