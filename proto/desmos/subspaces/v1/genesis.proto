syntax = "proto3";
package desmos.subspaces.v1;

import "gogoproto/gogo.proto";
import "desmos/subspaces/v1/subspace.proto";

option go_package = "github.com/desmos-labs/desmos/v2/x/subspaces/types";

// GenesisState contains the data of the genesis state for the subspaces module
message GenesisState {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  uint64 initial_subspace_id = 1
      [ (gogoproto.customname) = "InitialSubspaceID" ];

  repeated desmos.subspaces.v1.Subspace subspaces = 2
      [ (gogoproto.nullable) = false ];

  repeated ACLEntry acl = 3
      [ (gogoproto.customname) = "ACL", (gogoproto.nullable) = false ];

  repeated UserGroup user_groups = 4 [ (gogoproto.nullable) = false ];
}

// ACL represents a single Access Control List entry
message ACLEntry {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  // Either group name or user address
  uint64 subspace_id = 1 [ (gogoproto.customname) = "SubspaceID" ];
  string target = 2;
  uint32 permissions = 3;
}

// UsersEntry contains the data of a slice of users associated to a subspace
// with a specific id
message UserGroup {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  uint64 subspace_id = 1 [ (gogoproto.customname) = "SubspaceID" ];
  string name = 2;
  repeated string members = 3;
}