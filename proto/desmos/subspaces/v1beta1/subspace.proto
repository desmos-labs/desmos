syntax = "proto3";
package desmos.subspaces.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/desmos-labs/desmos/v2/x/staging/subspaces/types";

// SubspaceType contains all the possible subspace types
enum SubspaceType {
  option (gogoproto.goproto_enum_prefix) = false;

  // SubspaceTypeUnspecified identifies an unspecified type of subspace (used in
  // errors)
  SUBSPACE_TYPE_UNSPECIFIED = 0
      [ (gogoproto.enumvalue_customname) = "SubspaceTypeUnspecified" ];

  // SubspaceTypeOpen identifies that users can interact inside the subspace
  // without the need to being registered in it
  SUBSPACE_TYPE_OPEN = 1
      [ (gogoproto.enumvalue_customname) = "SubspaceTypeOpen" ];

  // SubspaceTypeClosed identifies that users can't interact inside the subspace
  // without being registered in it
  SUBSPACE_TYPE_CLOSED = 2
      [ (gogoproto.enumvalue_customname) = "SubspaceTypeClosed" ];
}

// Subspace contains all the data of a Desmos subspace
message Subspace {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  // unique SHA-256 string that identifies the subspace
  string id = 1 [
    (gogoproto.customname) = "ID",
    (gogoproto.moretags) = "yaml:\"subspace_id\""
  ];

  // human readable name of the subspace
  string name = 2 [ (gogoproto.moretags) = "yaml:\"name\"" ];

  // the address of the user that owns the subspace
  string owner = 3 [ (gogoproto.moretags) = "yaml:\"owner\"" ];

  // the address of the subspace creator
  string creator = 4 [ (gogoproto.moretags) = "yaml:\"creator\"" ];

  // the creation time of the subspace
  google.protobuf.Timestamp creation_time = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"creation_time\""
  ];

  // the type of the subspace that indicates if it need registration or not
  SubspaceType type = 6
      [ (gogoproto.moretags) = "yaml:\"type\""];
}
