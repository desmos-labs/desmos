syntax = "proto3";
package desmos.subspaces.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "desmos/subspaces/v1beta1/subspace.proto";
import "desmos/subspaces/v1beta1/models.proto";

option go_package = "github.com/desmos-labs/desmos/x/staging/subspaces/types";

// Query defines the gRPC querier service
service Query {

  // Subspace queries all the information about the subspace with the given id
  rpc Subspace(QuerySubspaceRequest) returns (QuerySubspaceResponse) {
    option (google.api.http).get = "/desmos/subspaces/v1beta1/{subspace_id}";
  }
}

// ___________________________________________________________________________________________________________________

// QuerySubspace is the request type for the Query/Subspace RPC method
message QuerySubspaceRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string subspace_id = 1 [
    (gogoproto.customname) = "SubspaceID",
    (gogoproto.jsontag) = "subspace_id",
    (gogoproto.moretags) = "yaml:\"subspace_id\""
  ];
}

// QuerySubspaceResponse is the response type for the Query/Subspace method
message QuerySubspaceResponse {
  desmos.subspaces.v1beta1.Subspace subspace = 1 [ (gogoproto.nullable) = false ];
}