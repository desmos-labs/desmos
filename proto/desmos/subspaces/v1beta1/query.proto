syntax = "proto3";
package desmos.subspaces.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "desmos/subspaces/v1beta1/subspace.proto";
import "desmos/subspaces/v1beta1/models.proto";

option go_package = "github.com/desmos-labs/desmos/x/staging/subspaces/types";

// Query defines the gRPC querier service
service Query {
  // QuerySubspaces queries all the subspaces inside desmos
  rpc Subspaces(QuerySubspacesRequest) returns (QuerySubspacesResponse) {
    option (google.api.http).get = "/desmos/subspaces/v1beta1/all";
  }

  // QuerySubspaceAdmins queries all the adminds of the subspaces with the given id
  rpc SubspaceAdmins(QuerySubspaceAdminsRequest) returns (QuerySubspaceAdminsResponse) {
    option (google.api.http).get = "/desmos/subspaces/v1beta1/admins/{subspace_id}";
  }
}

// ___________________________________________________________________________________________________________________

// QuerySubspaces is the request type for the Query/Subspaces RPC method
message QuerySubspacesRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
}

message QuerySubspacesResponse {
  // subspaces represents the list of all subspaces inside the store
  repeated desmos.subspaces.v1beta1.Subspace subspaces = 1 [ (gogoproto.nullable) = false ];
}


// QuerySubspaceAdmins is the request type for the Query/SubspaceAdmins method
message QuerySubspaceAdminsRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string subspace_id = 1;
}

// QuerySubspaceAdminsResponse is the response type for the Query/SubspaceAdmins method
message QuerySubspaceAdminsResponse {
  desmos.subspaces.v1beta1.Users admins = 1 [ (gogoproto.nullable) = false ];
}