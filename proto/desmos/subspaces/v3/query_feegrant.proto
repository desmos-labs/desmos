syntax = "proto3";
package desmos.subspaces.v3;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

import "desmos/subspaces/v3/models_feegrant.proto";

option go_package = "github.com/desmos-labs/desmos/v4/x/subspaces/types";

// QueryAllowancesRequest is the request type for the Query/Allowances
// RPC method
message QueryAllowancesRequest {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // Id of the subspace for which to get the grant(s)
  uint64 subspace_id = 1 [ (gogoproto.moretags) = "yaml:\"subspace_id\"" ];

  // Target that was granted an allowance
  google.protobuf.Any grantee = 2 [
    (cosmos_proto.accepts_interface) = "Grantee",
    (gogoproto.moretags) = "yaml:\"grantee\""
  ];

  // pagination defines an pagination for the request
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryAllowancesResponse is the response type for the Query/UserAllowances
// RPC method
message QueryAllowancesResponse {
  repeated Grant grants = 1 [
    (gogoproto.moretags) = "yaml:\"grants\"",
    (gogoproto.nullable) = false
  ];

  // pagination defines an pagination for the response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}