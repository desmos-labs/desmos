syntax = "proto3";
package desmos.posts.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "desmos/posts/v1beta1/polls.proto";

option go_package = "github.com/desmos-labs/desmos/v2/x/staging/posts/types";

// Post contains all the data of a Desmos post
message Post {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string post_id = 1 [
    (gogoproto.customname) = "PostID",
    (gogoproto.moretags) = "yaml:\"id\""
  ];

  string parent_id = 2 [
    (gogoproto.customname) = "ParentID",
    (gogoproto.moretags) = "yaml:\"parent_id\""
  ];

  string message = 3 [ (gogoproto.moretags) = "yaml:\"message\"" ];

  google.protobuf.Timestamp created = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"created\""
  ];

  google.protobuf.Timestamp last_edited = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"created\""
  ];

  CommentsState comments_state = 6 [
    (gogoproto.moretags) = "yaml:\"comments_state\""
  ];

  string subspace = 7 [ (gogoproto.moretags) = "yaml:\"subspace\"" ];

  repeated desmos.posts.v1beta1.Attribute additional_attributes = 8 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "additional_attributes,omitempty",
    (gogoproto.moretags) = "yaml:\"additional_attributes,omitempty\""
  ];

  string creator = 9 [ (gogoproto.moretags) = "yaml:\"creator\"" ];

  repeated Attachment attachments = 10 [
    (gogoproto.castrepeated) = "Attachments",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "attachments,omitempty",
    (gogoproto.moretags) = "yaml:\"attachments,omitempty\""
  ];

  desmos.posts.v1beta1.Poll poll = 11
      [ (gogoproto.moretags) = "yaml:\"poll,omitempty\"" ];
}

// ___________________________________________________________________________________________________________________

// CommentsState contains all the possible comments states
enum CommentsState {
  option (gogoproto.goproto_enum_prefix) = false;

  // COMMENTS_STATE_UNSPECIFIED
  COMMENTS_STATE_UNSPECIFIED = 0
      [ (gogoproto.enumvalue_customname) = "CommentsStateUnspecified" ];

  // COMMENT_STATE_ALLOWED tells that's possible to comment a post
  COMMENTS_STATE_ALLOWED = 1
      [ (gogoproto.enumvalue_customname) = "CommentsStateAllowed" ];

  // COMMENT_STATE_BLOCKED tells that's not possible to comment a post
  COMMENTS_STATE_BLOCKED = 2
      [ (gogoproto.enumvalue_customname) = "CommentsStateBlocked" ];
}

// ___________________________________________________________________________________________________________________

// Attachment contains the information representing any type of file provided
// with a post. This file can be an image or a multimedia file (vocals, video,
// documents, etc.).
message Attachment {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string uri = 1 [
    (gogoproto.customname) = "URI",
    (gogoproto.moretags) = "yaml:\"uri\""
  ];

  string mime_type = 2 [
    (gogoproto.customname) = "MimeType",
    (gogoproto.moretags) = "yaml:\"mime_type\""
  ];

  repeated string tags = 3 [ (gogoproto.moretags) = "yaml:\"tags,omitempty\"" ];
}

// ___________________________________________________________________________________________________________________

// Attribute represents a Posts' optional data entry and allows for
// custom Amino and JSON serialization and deserialization.
message Attribute {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string key = 1;
  string value = 2;
}
