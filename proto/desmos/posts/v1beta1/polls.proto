syntax = "proto3";
package desmos.posts.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/desmos-labs/desmos/v2/x/staging/posts/types";

// ProvidedAnswer contains the data of a single poll answer inserted by the
// creator
message ProvidedAnswer {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string id = 1 [
    (gogoproto.customname) = "ID",
    (gogoproto.moretags) = "yaml:\"id\""
  ];

  string text = 2 [
    (gogoproto.moretags) = "yaml:\"text\""
  ];
}

// ___________________________________________________________________________________________________________________

// Poll contains all the data of a desmos post's poll
message Poll {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string question = 1;

  repeated ProvidedAnswer provided_answers = 2 [
    (gogoproto.customname) = "ProvidedAnswers",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"provided_answers\""
  ];

  google.protobuf.Timestamp end_date = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true,
    (gogoproto.moretags) = "yaml:\"end_date\""
  ];

  bool allows_multiple_answers = 4 [
    (gogoproto.moretags) = "yaml:\"allows_multiple_answers\""
  ];

  bool allows_answer_edits = 5 [
    (gogoproto.moretags) = "yaml:\"allows_answer_edits\""
  ];
}

// ___________________________________________________________________________________________________________________

// UserAnswer contains the data of a user's answer to a poll
message UserAnswer {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  string post_id = 1 [
    (gogoproto.customname) = "PostID",
    (gogoproto.moretags) = "yaml:\"post_id\""
  ];
  string user = 2 [ (gogoproto.moretags) = "yaml:\"user\"" ];
  repeated string answers = 3 [ (gogoproto.moretags) = "yaml:\"answers\"" ];
}
