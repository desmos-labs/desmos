syntax = "proto3";
package desmos.ibc.applications.profiles.v1;

option go_package = "github.com/desmos-labs/desmos/x/ibc/applications/profiles/types";

import "desmos/ibc/applications/profiles/v1/models.proto";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "ibc/core/client/v1/client.proto";

// Msg defines the ibc/profiles Msg service.
service Msg {
  // ConnectProfile defines a rpc handler method for MsgConnectProfile.
  rpc CreateApplicationLink(MsgCreateApplicationLink) returns (MsgCreateApplicationLinkResponse);
}

// MsgCreateApplicationLink defines a msg to connect a profile with a centralized
// social network account (eg. Twitter, GitHub, etc).
message MsgCreateApplicationLink {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // The sender of the connection request
  string sender = 1;
  // Data of the application to which connect
  desmos.ibc.applications.profiles.v1.ApplicationData application = 2;
  // Data used to verify the connection
  desmos.ibc.applications.profiles.v1.VerificationData verification_data = 3;

  // The port on which the packet will be sent
  string source_port = 4 [ (gogoproto.moretags) = "yaml:\"source_port\"" ];
  // The channel by which the packet will be sent
  string source_channel = 5
      [ (gogoproto.moretags) = "yaml:\"source_channel\"" ];
  // Timeout height relative to the current block height.
  // The timeout is disabled when set to 0.
  ibc.core.client.v1.Height timeout_height = 6 [
    (gogoproto.moretags) = "yaml:\"timeout_height\"",
    (gogoproto.nullable) = false
  ];
  // Timeout timestamp (in nanoseconds) relative to the current block timestamp.
  // The timeout is disabled when set to 0.
  uint64 timeout_timestamp = 7
      [ (gogoproto.moretags) = "yaml:\"timeout_timestamp\"" ];
}

// MsgCreateApplicationLinkResponse defines the Msg/ConnectProfile response type.
message MsgCreateApplicationLinkResponse {}
