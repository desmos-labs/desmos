name: Release
# Release workflow builds the binaries for a release, and then publishes them to a newly created GitHub release.

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+-rc*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5
      - "v[0-9]+.[0-9]+.[0-9]+-testnet" # Push events to matching v*-testnet, i.e. v1.0-testnet, v20.15.10-testnet
      - "v[0-9]+.[0-9]+.[0-9]+-mainnet" # Push events to matching v*-mainnet, i.e. v1.0-mainnet, v20.15.10-mainnet

jobs:
  Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Go 🧰
        uses: actions/setup-go@v4
        with:
          go-version: '1.19'

      - name: Unshallow
        run: git fetch --prune --unshallow --tags --force

      - name: Create release 📜
        uses: goreleaser/goreleaser-action@v5.0.0
        with:
          args: release --rm-dist --release-notes ./RELEASE_CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#  Build-MacOS:
#    name: Build MacOS binary
#    runs-on: macos-10.15
#    steps:
#      - name: Checkout 🛎️
#        uses: actions/checkout@v4
#
#      - name: Unshallow
#        run: git fetch --prune --unshallow --tags --force
#
#      - name: Set variables
#        run: |
#          echo "VERSION=$(git describe --always | sed 's/^v//')" >> $GITHUB_ENV
#
#      - name: Setup Go 🧰
#        uses: actions/setup-go@v4
#        with:
#          go-version: '1.19'
#
#      - name: Build the binary 🏭
#        run: |
#          LEDGER_ENABLED=true make build
#          mv build/desmos "build/desmos-$VERSION-darwin-amd64"
#
#      - name: Upload the artifacts 📤
#        uses: actions/upload-artifact@v3
#        with:
#          name: 'darwin-amd64'
#          path: 'build/*darwin*amd64*'
#
#  Build-Linux:
#    name: Build Linux binaries
#    runs-on: ubuntu-18.04
#    strategy:
#      matrix:
#        go-arch: [ "amd64", "arm64" ]
#    steps:
#      - name: Checkout 🛎️
#        uses: actions/checkout@v4
#
#      - name: Fetch tags
#        run: git fetch --prune --unshallow --tags --force
#
#      - name: Set variables
#        run: |
#          echo "VERSION=$(git describe --always | sed 's/^v//')" >> $GITHUB_ENV
#
#      - name: Setup Go 🧰
#        uses: actions/setup-go@v4
#        with:
#          go-version: '1.19'
#
#      - name: Compute diff 📜
#        uses: technote-space/get-diff-action@v6.1.0
#        id: git_diff
#        with:
#          PATTERNS: |
#            **/**.go
#            go.mod
#            go.sum
#
#      - name: Build 🔨
#        run: |
#          GOARCH=${{ matrix.go-arch }} LEDGER_ENABLED=true make build
#          mv build/desmos "build/desmos-$VERSION-linux-${{ matrix.go-arch }}"
#
#      - name: Upload the linux/amd64 artifact 📤
#        uses: actions/upload-artifact@v3
#        with:
#          name: 'linux-amd64'
#          path: 'build/*linux*amd64*'
#
#      - name: Upload the linux/arm64 artifact 📤
#        uses: actions/upload-artifact@v3
#        with:
#          name: 'linux-arm64'
#          path: 'build/*linux*arm64*'
#
#  Build-Windows:
#    name: Build Windows binary
#    runs-on: windows-latest
#    steps:
#      - name: Setting up dependencies
#        run: |
#          choco install make
#
#      - name: Checkout 🛎️
#        uses: actions/checkout@v4
#
#      - name: Fetch tags
#        run: git fetch --prune --unshallow --tags --force
#
#      - name: Set variables
#        run: |
#          Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$(git describe --always | sed 's/^v//')"
#
#      - name: Setup Go 🧰
#        uses: actions/setup-go@v4
#        with:
#          go-version: '1.19'
#
#      - name: Build the binary 🏭
#        run: |
#          make LEDGER_ENABLED=true build
#          echo "build/desmos-$env:VERSION-$env:COMMIT-windows-amd64.exe"
#          mv build/desmos.exe "build/desmos-$env:VERSION-windows-amd64.exe"
#
#      - name: Upload the artifacts 📤
#        uses: actions/upload-artifact@v3
#        with:
#          name: 'windows-amd64'
#          path: 'build/*windows*amd64*'