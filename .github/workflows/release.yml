name: Release
# Release workflow builds the binaries for a release, and then publishes them to a newly created GitHub release.

on:
  release:
    types: [ created, edited ]

jobs:
  build-macos:
    name: Build MacOS binary
    runs-on: macos-10.15
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags --force

      - name: Set variables
        run: |
          echo "VERSION=$(git describe --always | sed 's/^v//')" >> $GITHUB_ENV

      - name: Setup Go 🧰
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15

      - name: Build the binary 🏭
        run: |
          LEDGER_ENABLED=true make build
          mv build/desmos "build/desmos-$VERSION-darwin-amd64"

      - name: Upload the artifacts 📤
        uses: actions/upload-artifact@v2
        with:
          name: 'darwin-amd64'
          path: 'build/*darwin*amd64*'

  build-linux:
    name: Build Linux binaries
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        go-arch: [ "amd64", "arm64" ]
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags --force

      - name: Set variables
        run: |
          echo "VERSION=$(git describe --always | sed 's/^v//')" >> $GITHUB_ENV

      - name: Setup Go 🧰
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15

      - name: Compute diff 📜
        uses: technote-space/get-diff-action@v4
        id: git_diff
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      
      - name: Update dependency
        run: go mod tidy

      - name: Build 🔨
        run: |
          GOARCH=${{ matrix.go-arch }} LEDGER_ENABLED=true make build
          mv build/desmos "build/desmos-$VERSION-linux-${{ matrix.go-arch }}"

      - name: Upload the linux/amd64 artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: 'linux-amd64'
          path: 'build/*linux*amd64*'

      - name: Upload the linux/arm64 artifact 📤
        uses: actions/upload-artifact@v2
        with:
          name: 'linux-arm64'
          path: 'build/*linux*arm64*'

  build-windows:
    name: Build Windows binary
    runs-on: windows-latest
    steps:
      - name: Setting up dependencies
        run: |
          choco install make

      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags --force

      - name: Set variables
        run: |
          Add-Content -Path $env:GITHUB_ENV -Value "VERSION=$(git describe --always | sed 's/^v//')"

      - name: Setup Go 🧰
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15

      - name: Build the binary 🏭
        run: |
          make LEDGER_ENABLED=true build
          echo "build/desmos-$env:VERSION-$env:COMMIT-windows-amd64.exe"
          mv build/desmos.exe "build/desmos-$env:VERSION-windows-amd64.exe"

      - name: Upload the artifacts 📤
        uses: actions/upload-artifact@v2
        with:
          name: 'windows-amd64'
          path: 'build/*windows*amd64*'