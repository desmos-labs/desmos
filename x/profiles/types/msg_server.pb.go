// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: desmos/profiles/v3/msg_server.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	types1 "github.com/cosmos/ibc-go/v8/modules/core/02-client/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgSaveProfile represents a message to save a profile.
type MsgSaveProfile struct {
	// DTag of the profile. If it shouldn't be changed, [do-no-modify] can be used
	// instead.
	DTag string `protobuf:"bytes,1,opt,name=dtag,proto3" json:"dtag,omitempty" yaml:"dtag"`
	// Nickname of the profile. If it shouldn't be changed, [do-no-modify] can be
	// used instead.
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty" yaml:"nickname"`
	// Bio of the profile. If it shouldn't be changed, [do-no-modify] can be used
	// instead.
	Bio string `protobuf:"bytes,3,opt,name=bio,proto3" json:"bio,omitempty" yaml:"bio"`
	// URL to the profile picture. If it shouldn't be changed, [do-no-modify] can
	// be used instead.
	ProfilePicture string `protobuf:"bytes,4,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty" yaml:"profile_picture"`
	// URL to the profile cover. If it shouldn't be changed, [do-no-modify] can be
	// used instead.
	CoverPicture string `protobuf:"bytes,5,opt,name=cover_picture,json=coverPicture,proto3" json:"cover_picture,omitempty" yaml:"cover_picture"`
	// Address of the user associated to the profile
	Creator string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
}

func (m *MsgSaveProfile) Reset()         { *m = MsgSaveProfile{} }
func (m *MsgSaveProfile) String() string { return proto.CompactTextString(m) }
func (*MsgSaveProfile) ProtoMessage()    {}
func (*MsgSaveProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{0}
}
func (m *MsgSaveProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSaveProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSaveProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSaveProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSaveProfile.Merge(m, src)
}
func (m *MsgSaveProfile) XXX_Size() int {
	return m.Size()
}
func (m *MsgSaveProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSaveProfile.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSaveProfile proto.InternalMessageInfo

func (m *MsgSaveProfile) GetDTag() string {
	if m != nil {
		return m.DTag
	}
	return ""
}

func (m *MsgSaveProfile) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *MsgSaveProfile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *MsgSaveProfile) GetProfilePicture() string {
	if m != nil {
		return m.ProfilePicture
	}
	return ""
}

func (m *MsgSaveProfile) GetCoverPicture() string {
	if m != nil {
		return m.CoverPicture
	}
	return ""
}

func (m *MsgSaveProfile) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// MsgSaveProfileResponse defines the Msg/SaveProfile response type.
type MsgSaveProfileResponse struct {
}

func (m *MsgSaveProfileResponse) Reset()         { *m = MsgSaveProfileResponse{} }
func (m *MsgSaveProfileResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSaveProfileResponse) ProtoMessage()    {}
func (*MsgSaveProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{1}
}
func (m *MsgSaveProfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSaveProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSaveProfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSaveProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSaveProfileResponse.Merge(m, src)
}
func (m *MsgSaveProfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSaveProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSaveProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSaveProfileResponse proto.InternalMessageInfo

// MsgDeleteProfile represents the message used to delete an existing profile.
type MsgDeleteProfile struct {
	// Address associated to the profile to be deleted
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
}

func (m *MsgDeleteProfile) Reset()         { *m = MsgDeleteProfile{} }
func (m *MsgDeleteProfile) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProfile) ProtoMessage()    {}
func (*MsgDeleteProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{2}
}
func (m *MsgDeleteProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProfile.Merge(m, src)
}
func (m *MsgDeleteProfile) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProfile.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProfile proto.InternalMessageInfo

func (m *MsgDeleteProfile) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// MsgDeleteProfileResponse defines the Msg/DeleteProfile response type.
type MsgDeleteProfileResponse struct {
}

func (m *MsgDeleteProfileResponse) Reset()         { *m = MsgDeleteProfileResponse{} }
func (m *MsgDeleteProfileResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProfileResponse) ProtoMessage()    {}
func (*MsgDeleteProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{3}
}
func (m *MsgDeleteProfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProfileResponse.Merge(m, src)
}
func (m *MsgDeleteProfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProfileResponse proto.InternalMessageInfo

// MsgRequestDTagTransfer represents the message used to request the DTag
// transfer to another user.
type MsgRequestDTagTransfer struct {
	// Receiver contains the address of the request receiver that owns the DTag to
	// transfer if the request is accepted
	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
	// Sender contains the address of the request sender that will receive the
	// receiver DTag if the requet is accepted
	Sender string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
}

func (m *MsgRequestDTagTransfer) Reset()         { *m = MsgRequestDTagTransfer{} }
func (m *MsgRequestDTagTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgRequestDTagTransfer) ProtoMessage()    {}
func (*MsgRequestDTagTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{4}
}
func (m *MsgRequestDTagTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestDTagTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestDTagTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestDTagTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestDTagTransfer.Merge(m, src)
}
func (m *MsgRequestDTagTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestDTagTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestDTagTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestDTagTransfer proto.InternalMessageInfo

func (m *MsgRequestDTagTransfer) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MsgRequestDTagTransfer) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// MsgRequestDTagTransferResponse defines the Msg/RequestDTagTransfer response
// type.
type MsgRequestDTagTransferResponse struct {
}

func (m *MsgRequestDTagTransferResponse) Reset()         { *m = MsgRequestDTagTransferResponse{} }
func (m *MsgRequestDTagTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRequestDTagTransferResponse) ProtoMessage()    {}
func (*MsgRequestDTagTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{5}
}
func (m *MsgRequestDTagTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestDTagTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestDTagTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestDTagTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestDTagTransferResponse.Merge(m, src)
}
func (m *MsgRequestDTagTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestDTagTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestDTagTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestDTagTransferResponse proto.InternalMessageInfo

// MsgCancelDTagTransferRequest represents the message used to cancel a DTag
// transfer request.
type MsgCancelDTagTransferRequest struct {
	// Receiver contains the address of the request receiver
	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
	// Sender contains the address of the requets sender
	Sender string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
}

func (m *MsgCancelDTagTransferRequest) Reset()         { *m = MsgCancelDTagTransferRequest{} }
func (m *MsgCancelDTagTransferRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCancelDTagTransferRequest) ProtoMessage()    {}
func (*MsgCancelDTagTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{6}
}
func (m *MsgCancelDTagTransferRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelDTagTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelDTagTransferRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelDTagTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelDTagTransferRequest.Merge(m, src)
}
func (m *MsgCancelDTagTransferRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelDTagTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelDTagTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelDTagTransferRequest proto.InternalMessageInfo

func (m *MsgCancelDTagTransferRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MsgCancelDTagTransferRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// MsgCancelDTagTransferRequestResponse represents the
// Msg/CancelDTagTransferRequest response type.
type MsgCancelDTagTransferRequestResponse struct {
}

func (m *MsgCancelDTagTransferRequestResponse) Reset()         { *m = MsgCancelDTagTransferRequestResponse{} }
func (m *MsgCancelDTagTransferRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelDTagTransferRequestResponse) ProtoMessage()    {}
func (*MsgCancelDTagTransferRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{7}
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelDTagTransferRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelDTagTransferRequestResponse.Merge(m, src)
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelDTagTransferRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelDTagTransferRequestResponse proto.InternalMessageInfo

// MsgAcceptDTagTransferRequest represents the message used to accept a DTag
// transfer request.
type MsgAcceptDTagTransferRequest struct {
	// NewDTag represents the DTag that the request receiver will obtain if they
	// accept the request
	NewDTag string `protobuf:"bytes,1,opt,name=new_dtag,json=newDtag,proto3" json:"new_dtag,omitempty" yaml:"new_dtag"`
	// Sender represents the request sender
	Sender string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
	// Receiver represents the request receiver
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
}

func (m *MsgAcceptDTagTransferRequest) Reset()         { *m = MsgAcceptDTagTransferRequest{} }
func (m *MsgAcceptDTagTransferRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAcceptDTagTransferRequest) ProtoMessage()    {}
func (*MsgAcceptDTagTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{8}
}
func (m *MsgAcceptDTagTransferRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcceptDTagTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcceptDTagTransferRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcceptDTagTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcceptDTagTransferRequest.Merge(m, src)
}
func (m *MsgAcceptDTagTransferRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcceptDTagTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcceptDTagTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcceptDTagTransferRequest proto.InternalMessageInfo

func (m *MsgAcceptDTagTransferRequest) GetNewDTag() string {
	if m != nil {
		return m.NewDTag
	}
	return ""
}

func (m *MsgAcceptDTagTransferRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgAcceptDTagTransferRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

// MsgAcceptDTagTransferRequestResponse defines the
// Msg/AcceptDTagTransferRequest response.
type MsgAcceptDTagTransferRequestResponse struct {
}

func (m *MsgAcceptDTagTransferRequestResponse) Reset()         { *m = MsgAcceptDTagTransferRequestResponse{} }
func (m *MsgAcceptDTagTransferRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAcceptDTagTransferRequestResponse) ProtoMessage()    {}
func (*MsgAcceptDTagTransferRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{9}
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcceptDTagTransferRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcceptDTagTransferRequestResponse.Merge(m, src)
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcceptDTagTransferRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcceptDTagTransferRequestResponse proto.InternalMessageInfo

// MsgRefuseDTagTransferRequest represents the message used to refuse a DTag
// transfer request.
type MsgRefuseDTagTransferRequest struct {
	// Sender represents the request sender
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
	// Receiver represents the request receiver
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
}

func (m *MsgRefuseDTagTransferRequest) Reset()         { *m = MsgRefuseDTagTransferRequest{} }
func (m *MsgRefuseDTagTransferRequest) String() string { return proto.CompactTextString(m) }
func (*MsgRefuseDTagTransferRequest) ProtoMessage()    {}
func (*MsgRefuseDTagTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{10}
}
func (m *MsgRefuseDTagTransferRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRefuseDTagTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRefuseDTagTransferRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRefuseDTagTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRefuseDTagTransferRequest.Merge(m, src)
}
func (m *MsgRefuseDTagTransferRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgRefuseDTagTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRefuseDTagTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRefuseDTagTransferRequest proto.InternalMessageInfo

func (m *MsgRefuseDTagTransferRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRefuseDTagTransferRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

// MsgRefuseDTagTransferRequestResponse defines the
// Msg/RefuseDTagTransferRequest response.
type MsgRefuseDTagTransferRequestResponse struct {
}

func (m *MsgRefuseDTagTransferRequestResponse) Reset()         { *m = MsgRefuseDTagTransferRequestResponse{} }
func (m *MsgRefuseDTagTransferRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRefuseDTagTransferRequestResponse) ProtoMessage()    {}
func (*MsgRefuseDTagTransferRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{11}
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRefuseDTagTransferRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRefuseDTagTransferRequestResponse.Merge(m, src)
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRefuseDTagTransferRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRefuseDTagTransferRequestResponse proto.InternalMessageInfo

// MsgLinkChainAccount represents a message to link an account to a profile.
type MsgLinkChainAccount struct {
	// ChainAddress contains the details of the external chain address to be
	// linked
	ChainAddress *types.Any `protobuf:"bytes,1,opt,name=chain_address,json=chainAddress,proto3" json:"chain_address,omitempty" yaml:"source_address"`
	// Proof contains the proof of ownership of the external chain address
	Proof Proof `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof" yaml:"source_proof"`
	// ChainConfig contains the configuration of the external chain
	ChainConfig ChainConfig `protobuf:"bytes,3,opt,name=chain_config,json=chainConfig,proto3" json:"chain_config" yaml:"source_chain_config"`
	// Signer represents the Desmos address associated with the
	// profile to which link the external account
	Signer string `protobuf:"bytes,4,opt,name=signer,proto3" json:"signer,omitempty" yaml:"signer"`
}

func (m *MsgLinkChainAccount) Reset()         { *m = MsgLinkChainAccount{} }
func (m *MsgLinkChainAccount) String() string { return proto.CompactTextString(m) }
func (*MsgLinkChainAccount) ProtoMessage()    {}
func (*MsgLinkChainAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{12}
}
func (m *MsgLinkChainAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLinkChainAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLinkChainAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLinkChainAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLinkChainAccount.Merge(m, src)
}
func (m *MsgLinkChainAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgLinkChainAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLinkChainAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLinkChainAccount proto.InternalMessageInfo

func (m *MsgLinkChainAccount) GetChainAddress() *types.Any {
	if m != nil {
		return m.ChainAddress
	}
	return nil
}

func (m *MsgLinkChainAccount) GetProof() Proof {
	if m != nil {
		return m.Proof
	}
	return Proof{}
}

func (m *MsgLinkChainAccount) GetChainConfig() ChainConfig {
	if m != nil {
		return m.ChainConfig
	}
	return ChainConfig{}
}

func (m *MsgLinkChainAccount) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

// MsgLinkChainAccountResponse defines the Msg/LinkAccount response type.
type MsgLinkChainAccountResponse struct {
}

func (m *MsgLinkChainAccountResponse) Reset()         { *m = MsgLinkChainAccountResponse{} }
func (m *MsgLinkChainAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLinkChainAccountResponse) ProtoMessage()    {}
func (*MsgLinkChainAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{13}
}
func (m *MsgLinkChainAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLinkChainAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLinkChainAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLinkChainAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLinkChainAccountResponse.Merge(m, src)
}
func (m *MsgLinkChainAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLinkChainAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLinkChainAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLinkChainAccountResponse proto.InternalMessageInfo

// MsgUnlinkChainAccount represents a message to unlink an account from a
// profile.
type MsgUnlinkChainAccount struct {
	// Owner represents the Desmos profile from which to remove the link
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty" yaml:"owner"`
	// ChainName represents the name of the chain to which the link to remove is
	// associated
	ChainName string `protobuf:"bytes,2,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty" yaml:"chain_name"`
	// Target represents the external address to be removed
	Target string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty" yaml:"target"`
}

func (m *MsgUnlinkChainAccount) Reset()         { *m = MsgUnlinkChainAccount{} }
func (m *MsgUnlinkChainAccount) String() string { return proto.CompactTextString(m) }
func (*MsgUnlinkChainAccount) ProtoMessage()    {}
func (*MsgUnlinkChainAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{14}
}
func (m *MsgUnlinkChainAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnlinkChainAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnlinkChainAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnlinkChainAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnlinkChainAccount.Merge(m, src)
}
func (m *MsgUnlinkChainAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnlinkChainAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnlinkChainAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnlinkChainAccount proto.InternalMessageInfo

func (m *MsgUnlinkChainAccount) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgUnlinkChainAccount) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *MsgUnlinkChainAccount) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

// MsgUnlinkChainAccountResponse defines the Msg/UnlinkAccount response type.
type MsgUnlinkChainAccountResponse struct {
}

func (m *MsgUnlinkChainAccountResponse) Reset()         { *m = MsgUnlinkChainAccountResponse{} }
func (m *MsgUnlinkChainAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnlinkChainAccountResponse) ProtoMessage()    {}
func (*MsgUnlinkChainAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{15}
}
func (m *MsgUnlinkChainAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnlinkChainAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnlinkChainAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnlinkChainAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnlinkChainAccountResponse.Merge(m, src)
}
func (m *MsgUnlinkChainAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnlinkChainAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnlinkChainAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnlinkChainAccountResponse proto.InternalMessageInfo

// MsgSetDefaultExternalAddress represents the message used to set a default
// address for a specific chain
type MsgSetDefaultExternalAddress struct {
	// Name of the chain for which to set the default address
	ChainName string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	// Address to be set as the default one
	Target string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	// User signing the message
	Signer string `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
}

func (m *MsgSetDefaultExternalAddress) Reset()         { *m = MsgSetDefaultExternalAddress{} }
func (m *MsgSetDefaultExternalAddress) String() string { return proto.CompactTextString(m) }
func (*MsgSetDefaultExternalAddress) ProtoMessage()    {}
func (*MsgSetDefaultExternalAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{16}
}
func (m *MsgSetDefaultExternalAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetDefaultExternalAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetDefaultExternalAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetDefaultExternalAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetDefaultExternalAddress.Merge(m, src)
}
func (m *MsgSetDefaultExternalAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetDefaultExternalAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetDefaultExternalAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetDefaultExternalAddress proto.InternalMessageInfo

func (m *MsgSetDefaultExternalAddress) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *MsgSetDefaultExternalAddress) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *MsgSetDefaultExternalAddress) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

// MsgSetDefaultExternalAddressResponse represents the
// Msg/SetDefaultExternalAddress response type
type MsgSetDefaultExternalAddressResponse struct {
}

func (m *MsgSetDefaultExternalAddressResponse) Reset()         { *m = MsgSetDefaultExternalAddressResponse{} }
func (m *MsgSetDefaultExternalAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetDefaultExternalAddressResponse) ProtoMessage()    {}
func (*MsgSetDefaultExternalAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{17}
}
func (m *MsgSetDefaultExternalAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetDefaultExternalAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetDefaultExternalAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetDefaultExternalAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetDefaultExternalAddressResponse.Merge(m, src)
}
func (m *MsgSetDefaultExternalAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetDefaultExternalAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetDefaultExternalAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetDefaultExternalAddressResponse proto.InternalMessageInfo

// MsgLinkApplication defines a msg to connect a profile with a
// centralized application account (eg. Twitter, GitHub, etc).
type MsgLinkApplication struct {
	// The sender of the connection request
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
	// LinkData contains the data related to the application to which connect
	LinkData Data `protobuf:"bytes,2,opt,name=link_data,json=linkData,proto3" json:"link_data" yaml:"link_data"`
	// Hex encoded call data that will be sent to the data source in order to
	// verify the link
	CallData string `protobuf:"bytes,3,opt,name=call_data,json=callData,proto3" json:"call_data,omitempty" yaml:"call_data"`
	// The port on which the packet will be sent
	SourcePort string `protobuf:"bytes,4,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty" yaml:"source_port"`
	// The channel by which the packet will be sent
	SourceChannel string `protobuf:"bytes,5,opt,name=source_channel,json=sourceChannel,proto3" json:"source_channel,omitempty" yaml:"source_channel"`
	// Timeout height relative to the current block height.
	// The timeout is disabled when set to 0.
	TimeoutHeight types1.Height `protobuf:"bytes,6,opt,name=timeout_height,json=timeoutHeight,proto3" json:"timeout_height" yaml:"timeout_height"`
	// Timeout timestamp (in nanoseconds) relative to the current block timestamp.
	// The timeout is disabled when set to 0.
	TimeoutTimestamp uint64 `protobuf:"varint,7,opt,name=timeout_timestamp,json=timeoutTimestamp,proto3" json:"timeout_timestamp,omitempty" yaml:"timeout_timestamp"`
}

func (m *MsgLinkApplication) Reset()         { *m = MsgLinkApplication{} }
func (m *MsgLinkApplication) String() string { return proto.CompactTextString(m) }
func (*MsgLinkApplication) ProtoMessage()    {}
func (*MsgLinkApplication) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{18}
}
func (m *MsgLinkApplication) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLinkApplication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLinkApplication.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLinkApplication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLinkApplication.Merge(m, src)
}
func (m *MsgLinkApplication) XXX_Size() int {
	return m.Size()
}
func (m *MsgLinkApplication) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLinkApplication.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLinkApplication proto.InternalMessageInfo

func (m *MsgLinkApplication) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgLinkApplication) GetLinkData() Data {
	if m != nil {
		return m.LinkData
	}
	return Data{}
}

func (m *MsgLinkApplication) GetCallData() string {
	if m != nil {
		return m.CallData
	}
	return ""
}

func (m *MsgLinkApplication) GetSourcePort() string {
	if m != nil {
		return m.SourcePort
	}
	return ""
}

func (m *MsgLinkApplication) GetSourceChannel() string {
	if m != nil {
		return m.SourceChannel
	}
	return ""
}

func (m *MsgLinkApplication) GetTimeoutHeight() types1.Height {
	if m != nil {
		return m.TimeoutHeight
	}
	return types1.Height{}
}

func (m *MsgLinkApplication) GetTimeoutTimestamp() uint64 {
	if m != nil {
		return m.TimeoutTimestamp
	}
	return 0
}

// MsgLinkApplicationResponse defines the Msg/LinkApplication
// response type.
type MsgLinkApplicationResponse struct {
}

func (m *MsgLinkApplicationResponse) Reset()         { *m = MsgLinkApplicationResponse{} }
func (m *MsgLinkApplicationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLinkApplicationResponse) ProtoMessage()    {}
func (*MsgLinkApplicationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{19}
}
func (m *MsgLinkApplicationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLinkApplicationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLinkApplicationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLinkApplicationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLinkApplicationResponse.Merge(m, src)
}
func (m *MsgLinkApplicationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLinkApplicationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLinkApplicationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLinkApplicationResponse proto.InternalMessageInfo

// MsgUnlinkApplication defines a msg to delete an application link from a user
// profile
type MsgUnlinkApplication struct {
	// Application represents the name of the application to unlink
	Application string `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty" yaml:"application"`
	// Username represents the username inside the application to unlink
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty" yaml:"username"`
	// Signer represents the Desmos account to which the application should be
	// unlinked
	Signer string `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty" yaml:"signer"`
}

func (m *MsgUnlinkApplication) Reset()         { *m = MsgUnlinkApplication{} }
func (m *MsgUnlinkApplication) String() string { return proto.CompactTextString(m) }
func (*MsgUnlinkApplication) ProtoMessage()    {}
func (*MsgUnlinkApplication) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{20}
}
func (m *MsgUnlinkApplication) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnlinkApplication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnlinkApplication.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnlinkApplication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnlinkApplication.Merge(m, src)
}
func (m *MsgUnlinkApplication) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnlinkApplication) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnlinkApplication.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnlinkApplication proto.InternalMessageInfo

func (m *MsgUnlinkApplication) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *MsgUnlinkApplication) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *MsgUnlinkApplication) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

// MsgUnlinkApplicationResponse defines the Msg/UnlinkApplication response
// type.
type MsgUnlinkApplicationResponse struct {
}

func (m *MsgUnlinkApplicationResponse) Reset()         { *m = MsgUnlinkApplicationResponse{} }
func (m *MsgUnlinkApplicationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnlinkApplicationResponse) ProtoMessage()    {}
func (*MsgUnlinkApplicationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{21}
}
func (m *MsgUnlinkApplicationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnlinkApplicationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnlinkApplicationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnlinkApplicationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnlinkApplicationResponse.Merge(m, src)
}
func (m *MsgUnlinkApplicationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnlinkApplicationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnlinkApplicationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnlinkApplicationResponse proto.InternalMessageInfo

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: Desmos 5.0.0
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{22}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: Desmos 5.0.0
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_869194438e2ecf0d, []int{23}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSaveProfile)(nil), "desmos.profiles.v3.MsgSaveProfile")
	proto.RegisterType((*MsgSaveProfileResponse)(nil), "desmos.profiles.v3.MsgSaveProfileResponse")
	proto.RegisterType((*MsgDeleteProfile)(nil), "desmos.profiles.v3.MsgDeleteProfile")
	proto.RegisterType((*MsgDeleteProfileResponse)(nil), "desmos.profiles.v3.MsgDeleteProfileResponse")
	proto.RegisterType((*MsgRequestDTagTransfer)(nil), "desmos.profiles.v3.MsgRequestDTagTransfer")
	proto.RegisterType((*MsgRequestDTagTransferResponse)(nil), "desmos.profiles.v3.MsgRequestDTagTransferResponse")
	proto.RegisterType((*MsgCancelDTagTransferRequest)(nil), "desmos.profiles.v3.MsgCancelDTagTransferRequest")
	proto.RegisterType((*MsgCancelDTagTransferRequestResponse)(nil), "desmos.profiles.v3.MsgCancelDTagTransferRequestResponse")
	proto.RegisterType((*MsgAcceptDTagTransferRequest)(nil), "desmos.profiles.v3.MsgAcceptDTagTransferRequest")
	proto.RegisterType((*MsgAcceptDTagTransferRequestResponse)(nil), "desmos.profiles.v3.MsgAcceptDTagTransferRequestResponse")
	proto.RegisterType((*MsgRefuseDTagTransferRequest)(nil), "desmos.profiles.v3.MsgRefuseDTagTransferRequest")
	proto.RegisterType((*MsgRefuseDTagTransferRequestResponse)(nil), "desmos.profiles.v3.MsgRefuseDTagTransferRequestResponse")
	proto.RegisterType((*MsgLinkChainAccount)(nil), "desmos.profiles.v3.MsgLinkChainAccount")
	proto.RegisterType((*MsgLinkChainAccountResponse)(nil), "desmos.profiles.v3.MsgLinkChainAccountResponse")
	proto.RegisterType((*MsgUnlinkChainAccount)(nil), "desmos.profiles.v3.MsgUnlinkChainAccount")
	proto.RegisterType((*MsgUnlinkChainAccountResponse)(nil), "desmos.profiles.v3.MsgUnlinkChainAccountResponse")
	proto.RegisterType((*MsgSetDefaultExternalAddress)(nil), "desmos.profiles.v3.MsgSetDefaultExternalAddress")
	proto.RegisterType((*MsgSetDefaultExternalAddressResponse)(nil), "desmos.profiles.v3.MsgSetDefaultExternalAddressResponse")
	proto.RegisterType((*MsgLinkApplication)(nil), "desmos.profiles.v3.MsgLinkApplication")
	proto.RegisterType((*MsgLinkApplicationResponse)(nil), "desmos.profiles.v3.MsgLinkApplicationResponse")
	proto.RegisterType((*MsgUnlinkApplication)(nil), "desmos.profiles.v3.MsgUnlinkApplication")
	proto.RegisterType((*MsgUnlinkApplicationResponse)(nil), "desmos.profiles.v3.MsgUnlinkApplicationResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "desmos.profiles.v3.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "desmos.profiles.v3.MsgUpdateParamsResponse")
}

func init() {
	proto.RegisterFile("desmos/profiles/v3/msg_server.proto", fileDescriptor_869194438e2ecf0d)
}

var fileDescriptor_869194438e2ecf0d = []byte{
	// 1672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xcb, 0x6f, 0xdb, 0xc8,
	0x19, 0x37, 0xe3, 0xf7, 0xc8, 0x4f, 0xfa, 0x25, 0x33, 0xb6, 0xe8, 0x4e, 0x02, 0xc7, 0x8f, 0x5a,
	0xf2, 0x23, 0x4d, 0x53, 0x15, 0x29, 0x6a, 0xd9, 0x45, 0x5b, 0xb4, 0x0e, 0x5c, 0xc6, 0xbd, 0x14,
	0x28, 0x54, 0x8a, 0x1a, 0xd3, 0x84, 0x29, 0x8e, 0x4a, 0x52, 0x72, 0x7c, 0x2b, 0x72, 0x29, 0xd0,
	0x4b, 0xfb, 0x07, 0xf4, 0xd6, 0x4b, 0x8f, 0x39, 0xe4, 0xb0, 0x87, 0xc5, 0x9e, 0x83, 0x3d, 0x05,
	0x7b, 0xda, 0x13, 0x77, 0xd7, 0xc1, 0x22, 0xe7, 0xd5, 0x5f, 0xb0, 0x98, 0x07, 0x29, 0x92, 0xe2,
	0xd8, 0xde, 0x24, 0x7b, 0x91, 0x38, 0xdf, 0xf7, 0xfb, 0x5e, 0xbf, 0xf9, 0xe6, 0x05, 0xee, 0xd5,
	0x91, 0xd7, 0xc0, 0x5e, 0xa9, 0xe9, 0xe2, 0x53, 0xcb, 0x46, 0x5e, 0xa9, 0xbd, 0x57, 0x6a, 0x78,
	0x66, 0xd5, 0x43, 0x6e, 0x1b, 0xb9, 0xc5, 0xa6, 0x8b, 0x7d, 0x2c, 0xcb, 0x0c, 0x54, 0x0c, 0x41,
	0xc5, 0xf6, 0x9e, 0xb2, 0x68, 0x62, 0x6c, 0xda, 0xa8, 0x44, 0x11, 0xb5, 0xd6, 0x69, 0x49, 0x77,
	0x2e, 0x19, 0x5c, 0x99, 0x35, 0xb1, 0x89, 0xe9, 0x67, 0x89, 0x7c, 0x71, 0xe9, 0x82, 0x81, 0x69,
	0xa4, 0x86, 0x67, 0x96, 0xda, 0x3b, 0xe4, 0x8f, 0x2b, 0xa6, 0xf5, 0x86, 0xe5, 0xe0, 0x12, 0xfd,
	0xe5, 0xa2, 0x45, 0x86, 0xad, 0x32, 0x27, 0x6c, 0xc0, 0x55, 0xaa, 0x55, 0x33, 0x4a, 0x06, 0x76,
	0x51, 0xc9, 0xb0, 0x2d, 0xe4, 0xf8, 0xc4, 0x17, 0xfb, 0xe2, 0x80, 0xf5, 0xac, 0x8a, 0x70, 0x1d,
	0xd9, 0x5e, 0x55, 0x6f, 0x36, 0xab, 0xb6, 0xe5, 0x9c, 0x87, 0xbe, 0x36, 0xc5, 0x50, 0xe3, 0x4c,
	0xb7, 0x9c, 0x04, 0x78, 0x55, 0x0c, 0x6e, 0xea, 0xae, 0xde, 0xe0, 0x38, 0xf8, 0xa2, 0x1f, 0x4c,
	0x1c, 0x79, 0xe6, 0x33, 0xbd, 0x8d, 0x8e, 0x19, 0x54, 0xde, 0x04, 0x03, 0x75, 0x5f, 0x37, 0xf3,
	0xd2, 0x8a, 0xb4, 0x36, 0x5a, 0x59, 0xb8, 0x0a, 0xd4, 0x81, 0xc3, 0x13, 0xdd, 0xec, 0x04, 0x6a,
	0xee, 0x52, 0x6f, 0xd8, 0x65, 0x48, 0xb4, 0x50, 0xa3, 0x20, 0xb9, 0x04, 0x46, 0x1c, 0xcb, 0x38,
	0x77, 0xf4, 0x06, 0xca, 0xdf, 0xa1, 0x06, 0x33, 0x9d, 0x40, 0x9d, 0x64, 0xc0, 0x50, 0x03, 0xb5,
	0x08, 0x24, 0xaf, 0x80, 0xfe, 0x9a, 0x85, 0xf3, 0xfd, 0x14, 0x3b, 0xd1, 0x09, 0x54, 0xc0, 0xb0,
	0x35, 0x0b, 0x43, 0x8d, 0xa8, 0xe4, 0x03, 0x30, 0xc9, 0xb3, 0xae, 0x36, 0x2d, 0xc3, 0x6f, 0xb9,
	0x28, 0x3f, 0x40, 0xd1, 0x4a, 0x27, 0x50, 0xe7, 0x19, 0x3a, 0x05, 0x80, 0xda, 0x04, 0x97, 0x1c,
	0x33, 0x81, 0xfc, 0x04, 0x8c, 0x1b, 0xb8, 0x8d, 0xdc, 0xc8, 0xc5, 0x20, 0x75, 0x91, 0xef, 0x04,
	0xea, 0x2c, 0x73, 0x91, 0x50, 0x43, 0x6d, 0x8c, 0x8e, 0x43, 0xf3, 0x43, 0x30, 0x6c, 0xb8, 0x48,
	0xf7, 0xb1, 0x9b, 0x1f, 0xa2, 0x86, 0x1b, 0x9d, 0x40, 0x9d, 0xe0, 0x86, 0x4c, 0x01, 0xbf, 0x78,
	0xb5, 0x35, 0xcb, 0x27, 0x7b, 0xbf, 0x5e, 0x77, 0x91, 0xe7, 0x3d, 0xf3, 0x5d, 0xcb, 0x31, 0xb5,
	0xd0, 0xb4, 0xbc, 0xfa, 0xe2, 0xdd, 0xcb, 0x8d, 0x70, 0xf4, 0xaf, 0x77, 0x2f, 0x37, 0xe6, 0xf8,
	0xac, 0x24, 0x19, 0x87, 0x79, 0x30, 0x9f, 0x94, 0x68, 0xc8, 0x6b, 0x62, 0xc7, 0x43, 0xf0, 0x85,
	0x04, 0xa6, 0x8e, 0x3c, 0xf3, 0x10, 0xd9, 0xc8, 0x8f, 0x26, 0x28, 0x96, 0x9c, 0xf4, 0xfe, 0xc9,
	0xad, 0xa5, 0x93, 0x5b, 0xe8, 0x26, 0x97, 0x88, 0x07, 0x15, 0x90, 0x4f, 0xcb, 0xa2, 0x04, 0xff,
	0x27, 0xd1, 0xdc, 0x35, 0xf4, 0xf7, 0x16, 0xf2, 0x7c, 0xd2, 0x27, 0x27, 0xae, 0xee, 0x78, 0xa7,
	0xc8, 0x25, 0xad, 0xe1, 0x22, 0x03, 0x59, 0x6d, 0x14, 0xe6, 0x19, 0x6b, 0x8d, 0x50, 0x03, 0xb5,
	0x08, 0x24, 0xaf, 0x83, 0x21, 0x0f, 0x39, 0x75, 0xe4, 0xf2, 0x4e, 0x9a, 0xee, 0x04, 0xea, 0x38,
	0x83, 0x33, 0x39, 0xd4, 0x38, 0xa0, 0xbc, 0x45, 0x92, 0xe7, 0x03, 0x92, 0xfb, 0x72, 0x37, 0xf7,
	0x8c, 0x54, 0xe0, 0x0a, 0x28, 0x64, 0x6b, 0xa2, 0x3a, 0xbe, 0x92, 0xc0, 0xd2, 0x91, 0x67, 0x1e,
	0xe8, 0x8e, 0x81, 0xec, 0x24, 0x82, 0x1a, 0xc9, 0xbf, 0xed, 0xa9, 0x66, 0x33, 0xa3, 0x1a, 0x21,
	0xed, 0xdd, 0x2a, 0xf7, 0x53, 0x55, 0xae, 0xf7, 0x54, 0x29, 0x74, 0x12, 0x56, 0xbf, 0x97, 0xaa,
	0xfe, 0x5e, 0xb7, 0x7a, 0x61, 0x01, 0x70, 0x15, 0xdc, 0xbf, 0x4e, 0x1f, 0x31, 0xf1, 0xdf, 0x3b,
	0x94, 0x89, 0x7d, 0xc3, 0x40, 0x4d, 0x3f, 0x8b, 0x89, 0x5f, 0x80, 0x11, 0x07, 0x5d, 0x54, 0x63,
	0x7b, 0x44, 0xe1, 0x2a, 0x50, 0x87, 0x9f, 0xa2, 0x0b, 0xbe, 0x4d, 0x84, 0xab, 0x9f, 0x83, 0xa0,
	0x36, 0xec, 0xa0, 0x8b, 0x43, 0xb2, 0x5b, 0x7c, 0x78, 0xed, 0x89, 0x79, 0xe8, 0xff, 0x80, 0x79,
	0x28, 0xff, 0x8c, 0x90, 0x18, 0x0d, 0x53, 0x34, 0x0a, 0xab, 0xe7, 0x34, 0x0a, 0xf5, 0x11, 0x8d,
	0xdf, 0xb0, 0x86, 0xd2, 0xd0, 0x69, 0xcb, 0x43, 0x59, 0x34, 0x76, 0xb9, 0x90, 0x3e, 0x06, 0x17,
	0x77, 0x7e, 0x34, 0x2e, 0x84, 0x25, 0x70, 0x2e, 0x84, 0xfa, 0x88, 0x8b, 0x4f, 0xfb, 0xc1, 0xcc,
	0x91, 0x67, 0xfe, 0xd1, 0x72, 0xce, 0x0f, 0xc8, 0x49, 0xb5, 0x6f, 0x18, 0xb8, 0xe5, 0xf8, 0x72,
	0x1b, 0x8c, 0xb3, 0x93, 0x4b, 0x67, 0x79, 0x51, 0x26, 0x72, 0xbb, 0xb3, 0x45, 0x76, 0x5a, 0x17,
	0xc3, 0xd3, 0xba, 0xb8, 0xef, 0x5c, 0x56, 0x7e, 0xd9, 0x09, 0xd4, 0x39, 0xce, 0x0f, 0x6e, 0xb9,
	0x06, 0x0a, 0xad, 0xe0, 0xe7, 0xaf, 0xb6, 0x0a, 0xbd, 0x67, 0x7e, 0x58, 0xec, 0xa1, 0xee, 0xeb,
	0xda, 0x18, 0x8d, 0xc3, 0x25, 0xf2, 0x9f, 0xc0, 0x60, 0xd3, 0xc5, 0xf8, 0x94, 0x92, 0x96, 0xdb,
	0x5d, 0x2c, 0x66, 0x58, 0x1f, 0x13, 0x40, 0x65, 0xe5, 0x75, 0xa0, 0xf6, 0x75, 0x02, 0x75, 0x26,
	0x11, 0x98, 0x1a, 0xc3, 0xff, 0xbf, 0x7b, 0xb9, 0x21, 0x69, 0xcc, 0x93, 0x7c, 0x0e, 0x58, 0x88,
	0xaa, 0x81, 0x9d, 0x53, 0xcb, 0xa4, 0xad, 0x99, 0xdb, 0x55, 0xb3, 0x3c, 0x53, 0x0a, 0x0e, 0x28,
	0xac, 0xf2, 0x80, 0xfb, 0x57, 0x12, 0xfe, 0xe3, 0x9e, 0x78, 0x98, 0x9c, 0xd1, 0xb5, 0xa2, 0xad,
	0x63, 0x99, 0x0e, 0x72, 0xf9, 0xc1, 0x18, 0x6f, 0x1d, 0x2a, 0xbf, 0xae, 0x75, 0x28, 0xa0, 0xbc,
	0xc1, 0xb6, 0x10, 0x3a, 0x20, 0xf3, 0xad, 0x74, 0xe7, 0x3b, 0x3d, 0x4d, 0x70, 0x19, 0xdc, 0xcd,
	0x10, 0x47, 0xb3, 0xfb, 0xad, 0x04, 0xe6, 0x8e, 0x3c, 0xf3, 0xcf, 0x8e, 0x9d, 0x9e, 0xdf, 0x5f,
	0x81, 0x41, 0x7c, 0xe1, 0x44, 0x1d, 0xbe, 0xd6, 0x09, 0xd4, 0x31, 0x96, 0x26, 0x15, 0x8b, 0xb3,
	0x64, 0x66, 0xf2, 0x43, 0x00, 0x18, 0x15, 0xb1, 0xeb, 0xc5, 0x5c, 0x27, 0x50, 0xa7, 0xf9, 0x59,
	0x17, 0xe9, 0xa0, 0x36, 0x4a, 0x07, 0x4f, 0xc9, 0x0d, 0x63, 0x1d, 0x0c, 0xf9, 0xba, 0x6b, 0x22,
	0x9f, 0xef, 0x0f, 0xb1, 0x63, 0x84, 0xc9, 0xa1, 0xc6, 0x01, 0xe5, 0x4d, 0xc2, 0x02, 0x0b, 0x46,
	0x48, 0x58, 0xea, 0x92, 0xd0, 0x5b, 0x0d, 0x54, 0xc1, 0x72, 0xa6, 0xa2, 0xdb, 0xe6, 0x6c, 0xc9,
	0x3f, 0x43, 0xfe, 0x21, 0x3a, 0xd5, 0x5b, 0xb6, 0xff, 0x9b, 0xe7, 0x3e, 0x72, 0x1d, 0xdd, 0x0e,
	0xfb, 0x6e, 0x39, 0x51, 0x0f, 0x25, 0x25, 0x9e, 0xf8, 0x7c, 0x94, 0x38, 0x2d, 0x35, 0xcc, 0x52,
	0xde, 0x8e, 0xa6, 0x9b, 0x15, 0x94, 0xbf, 0x71, 0x76, 0xf7, 0x52, 0xb3, 0x1b, 0x5b, 0xcd, 0xc2,
	0xec, 0xf8, 0x6a, 0x16, 0xea, 0xa3, 0x32, 0x3f, 0x19, 0x00, 0x32, 0xef, 0x87, 0xfd, 0x66, 0xd3,
	0xb6, 0x0c, 0xdd, 0xb7, 0xb0, 0xf3, 0x31, 0xf6, 0xb3, 0x13, 0x30, 0x4a, 0xc8, 0xad, 0xd6, 0x75,
	0x5f, 0xe7, 0x6b, 0x33, 0x9f, 0xb5, 0x82, 0xc8, 0x92, 0xae, 0x2c, 0xf3, 0xa5, 0x33, 0xc5, 0x62,
	0x44, 0x86, 0x7c, 0xc1, 0x8c, 0x10, 0x01, 0x01, 0xca, 0x3b, 0x60, 0xd4, 0xd0, 0x6d, 0x9b, 0x79,
	0x65, 0x0c, 0xce, 0x76, 0xed, 0x22, 0x15, 0xd4, 0x46, 0xc8, 0x37, 0x35, 0xf9, 0x39, 0xc8, 0x85,
	0x4b, 0x1d, 0xbb, 0x3e, 0x5f, 0x65, 0xf3, 0x9d, 0x40, 0x95, 0x93, 0xfb, 0x00, 0x76, 0x7d, 0xa8,
	0x01, 0x36, 0x3a, 0xc6, 0xae, 0x2f, 0xff, 0x1a, 0x4c, 0x74, 0xd7, 0xb0, 0xe3, 0x20, 0x9b, 0xdf,
	0x3b, 0x17, 0x7b, 0x36, 0x2f, 0xae, 0x87, 0xda, 0x38, 0x13, 0x1c, 0xb0, 0xb1, 0x8c, 0xc0, 0x84,
	0x6f, 0x35, 0x10, 0x6e, 0xf9, 0xd5, 0x33, 0x64, 0x99, 0x67, 0x3e, 0xbd, 0x80, 0xe6, 0x76, 0x95,
	0xa2, 0x55, 0x33, 0x8a, 0xe4, 0x29, 0x51, 0xe4, 0x0f, 0x88, 0xf6, 0x4e, 0xf1, 0x77, 0x14, 0x51,
	0x81, 0x9c, 0x0a, 0x1e, 0x21, 0x69, 0xcf, 0xf9, 0x18, 0xe7, 0x52, 0x66, 0x22, 0xff, 0x1e, 0x4c,
	0x87, 0x30, 0xf2, 0xef, 0xf9, 0x7a, 0xa3, 0x99, 0x1f, 0x5e, 0x91, 0xd6, 0x06, 0x2a, 0x4b, 0x9d,
	0x40, 0xcd, 0x27, 0x3d, 0x45, 0x10, 0xa8, 0x4d, 0x71, 0xd9, 0x49, 0x28, 0x2a, 0xaf, 0xa7, 0x6e,
	0x23, 0x8b, 0xc9, 0xad, 0x24, 0xd6, 0x23, 0x70, 0x09, 0x28, 0xbd, 0xd2, 0xa8, 0xb1, 0xbe, 0x93,
	0xc0, 0x6c, 0xb4, 0xc2, 0xe2, 0xad, 0xf5, 0x18, 0xe4, 0xf4, 0xee, 0x90, 0xf7, 0x57, 0x6c, 0x3a,
	0x62, 0x4a, 0xa8, 0xc5, 0xa1, 0xe4, 0x0e, 0xda, 0xf2, 0x48, 0x17, 0x67, 0x3d, 0x4f, 0x42, 0x0d,
	0xd4, 0x22, 0x50, 0x6c, 0x6b, 0xed, 0x7f, 0xdf, 0xad, 0x75, 0x33, 0xb5, 0xf8, 0xee, 0xa6, 0x77,
	0x95, 0x38, 0x23, 0x05, 0xba, 0x65, 0xf4, 0xc8, 0x23, 0x4e, 0x3e, 0x93, 0xc0, 0x24, 0x01, 0x34,
	0xeb, 0xba, 0x8f, 0x8e, 0xe9, 0xcb, 0x4d, 0x7e, 0x04, 0x46, 0xf5, 0x96, 0x7f, 0x86, 0x5d, 0xcb,
	0xbf, 0xe4, 0x64, 0x88, 0xb7, 0x84, 0x2e, 0x54, 0x7e, 0x02, 0x86, 0xd8, 0xdb, 0x8f, 0xaf, 0x2d,
	0x25, 0xf3, 0xdc, 0xa3, 0x88, 0xca, 0x28, 0x69, 0x29, 0xd6, 0x39, 0xdc, 0xa8, 0xfc, 0x90, 0xd4,
	0xd5, 0x75, 0x47, 0x4a, 0xfb, 0x09, 0x2f, 0xed, 0x79, 0xf7, 0x9d, 0x99, 0x4a, 0x16, 0x2e, 0x82,
	0x85, 0x94, 0x28, 0xac, 0x6d, 0xf7, 0xdf, 0x39, 0xd0, 0x7f, 0xe4, 0x99, 0xf2, 0x5f, 0x41, 0x2e,
	0xfe, 0xfe, 0x84, 0x59, 0x69, 0x25, 0xdf, 0x47, 0xca, 0xc6, 0xcd, 0x98, 0x30, 0x8c, 0x6c, 0x80,
	0xf1, 0xe4, 0xfb, 0xe9, 0xbe, 0xc0, 0x38, 0x81, 0x52, 0x7e, 0x7a, 0x1b, 0x54, 0x14, 0xa4, 0x05,
	0x66, 0xb2, 0xde, 0x40, 0xa2, 0x3c, 0x33, 0xb0, 0xca, 0xee, 0xed, 0xb1, 0x51, 0xd8, 0x7f, 0x4a,
	0x60, 0x51, 0xfc, 0x66, 0xd9, 0x16, 0x78, 0x14, 0x5a, 0x28, 0x8f, 0x7f, 0xa8, 0x45, 0x22, 0x13,
	0xf1, 0x9b, 0x41, 0x94, 0x89, 0xd0, 0x42, 0x98, 0xc9, 0x8d, 0x37, 0x6f, 0x9a, 0x89, 0xf8, 0xda,
	0xbd, 0x2d, 0x64, 0x59, 0x60, 0x21, 0xcc, 0xe4, 0xc6, 0x7b, 0xaf, 0x6c, 0x83, 0xa9, 0x9e, 0x3b,
	0xef, 0x03, 0x81, 0xb7, 0x34, 0x50, 0x29, 0xdd, 0x12, 0x18, 0x45, 0x73, 0x81, 0x9c, 0x71, 0x07,
	0x5b, 0x17, 0xb8, 0xe9, 0x85, 0x2a, 0x3b, 0xb7, 0x86, 0x26, 0xb8, 0x16, 0xdf, 0x77, 0x44, 0x5c,
	0x0b, 0x2d, 0x84, 0x5c, 0xdf, 0x78, 0x2b, 0x91, 0x2d, 0x30, 0x99, 0xbe, 0x91, 0xac, 0x5e, 0xc3,
	0x60, 0x0c, 0xa7, 0x14, 0x6f, 0x87, 0x8b, 0x42, 0x61, 0x30, 0xdd, 0x7b, 0x46, 0xad, 0x5d, 0x4b,
	0x5e, 0x3c, 0xdc, 0xf6, 0x6d, 0x91, 0x51, 0xc0, 0xbf, 0x81, 0xb1, 0xc4, 0x01, 0x70, 0x4f, 0xe4,
	0x21, 0x06, 0x52, 0x36, 0x6f, 0x01, 0x0a, 0x23, 0x28, 0x83, 0xff, 0x20, 0x5b, 0x7d, 0xe5, 0x0f,
	0xaf, 0xaf, 0x0a, 0xd2, 0x9b, 0xab, 0x82, 0xf4, 0xf5, 0x55, 0x41, 0xfa, 0xcf, 0xdb, 0x42, 0xdf,
	0x9b, 0xb7, 0x85, 0xbe, 0x2f, 0xdf, 0x16, 0xfa, 0xfe, 0xb2, 0x63, 0x5a, 0xfe, 0x59, 0xab, 0x56,
	0x34, 0x70, 0xa3, 0xc4, 0xfc, 0x6e, 0xd9, 0x7a, 0xcd, 0xe3, 0xdf, 0xa5, 0xf6, 0xa3, 0xf8, 0x19,
	0xe0, 0x5f, 0x36, 0x91, 0x57, 0x1b, 0xa2, 0xcf, 0xb7, 0xbd, 0xef, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x9a, 0x79, 0x64, 0x44, 0xb5, 0x15, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// SaveProfile defines the method to save a profile
	SaveProfile(ctx context.Context, in *MsgSaveProfile, opts ...grpc.CallOption) (*MsgSaveProfileResponse, error)
	// DeleteProfile defines the method to delete an existing profile
	DeleteProfile(ctx context.Context, in *MsgDeleteProfile, opts ...grpc.CallOption) (*MsgDeleteProfileResponse, error)
	// RequestDTagTransfer defines the method to request another user to transfer
	// their DTag to you
	RequestDTagTransfer(ctx context.Context, in *MsgRequestDTagTransfer, opts ...grpc.CallOption) (*MsgRequestDTagTransferResponse, error)
	// CancelDTagTransferRequest defines the method to cancel an outgoing DTag
	// transfer request
	CancelDTagTransferRequest(ctx context.Context, in *MsgCancelDTagTransferRequest, opts ...grpc.CallOption) (*MsgCancelDTagTransferRequestResponse, error)
	// AcceptDTagTransferRequest defines the method to accept an incoming DTag
	// transfer request
	AcceptDTagTransferRequest(ctx context.Context, in *MsgAcceptDTagTransferRequest, opts ...grpc.CallOption) (*MsgAcceptDTagTransferRequestResponse, error)
	// RefuseDTagTransferRequest defines the method to refuse an incoming DTag
	// transfer request
	RefuseDTagTransferRequest(ctx context.Context, in *MsgRefuseDTagTransferRequest, opts ...grpc.CallOption) (*MsgRefuseDTagTransferRequestResponse, error)
	// LinkChainAccount defines a method to link an external chain account to a
	// profile
	LinkChainAccount(ctx context.Context, in *MsgLinkChainAccount, opts ...grpc.CallOption) (*MsgLinkChainAccountResponse, error)
	// UnlinkChainAccount defines a method to unlink an external chain account
	// from a profile
	UnlinkChainAccount(ctx context.Context, in *MsgUnlinkChainAccount, opts ...grpc.CallOption) (*MsgUnlinkChainAccountResponse, error)
	// SetDefaultExternalAddress allows to set a specific external address as the
	// default one for a given chain
	SetDefaultExternalAddress(ctx context.Context, in *MsgSetDefaultExternalAddress, opts ...grpc.CallOption) (*MsgSetDefaultExternalAddressResponse, error)
	// LinkApplication defines a method to create a centralized application
	// link
	LinkApplication(ctx context.Context, in *MsgLinkApplication, opts ...grpc.CallOption) (*MsgLinkApplicationResponse, error)
	// UnlinkApplication defines a method to remove a centralized application
	UnlinkApplication(ctx context.Context, in *MsgUnlinkApplication, opts ...grpc.CallOption) (*MsgUnlinkApplicationResponse, error)
	// UpdateParams defines a (governance) operation for updating the module
	// parameters.
	// The authority defaults to the x/gov module account.
	//
	// Since: Desmos 5.0.0
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SaveProfile(ctx context.Context, in *MsgSaveProfile, opts ...grpc.CallOption) (*MsgSaveProfileResponse, error) {
	out := new(MsgSaveProfileResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/SaveProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteProfile(ctx context.Context, in *MsgDeleteProfile, opts ...grpc.CallOption) (*MsgDeleteProfileResponse, error) {
	out := new(MsgDeleteProfileResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/DeleteProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RequestDTagTransfer(ctx context.Context, in *MsgRequestDTagTransfer, opts ...grpc.CallOption) (*MsgRequestDTagTransferResponse, error) {
	out := new(MsgRequestDTagTransferResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/RequestDTagTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CancelDTagTransferRequest(ctx context.Context, in *MsgCancelDTagTransferRequest, opts ...grpc.CallOption) (*MsgCancelDTagTransferRequestResponse, error) {
	out := new(MsgCancelDTagTransferRequestResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/CancelDTagTransferRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AcceptDTagTransferRequest(ctx context.Context, in *MsgAcceptDTagTransferRequest, opts ...grpc.CallOption) (*MsgAcceptDTagTransferRequestResponse, error) {
	out := new(MsgAcceptDTagTransferRequestResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/AcceptDTagTransferRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RefuseDTagTransferRequest(ctx context.Context, in *MsgRefuseDTagTransferRequest, opts ...grpc.CallOption) (*MsgRefuseDTagTransferRequestResponse, error) {
	out := new(MsgRefuseDTagTransferRequestResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/RefuseDTagTransferRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LinkChainAccount(ctx context.Context, in *MsgLinkChainAccount, opts ...grpc.CallOption) (*MsgLinkChainAccountResponse, error) {
	out := new(MsgLinkChainAccountResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/LinkChainAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnlinkChainAccount(ctx context.Context, in *MsgUnlinkChainAccount, opts ...grpc.CallOption) (*MsgUnlinkChainAccountResponse, error) {
	out := new(MsgUnlinkChainAccountResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/UnlinkChainAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetDefaultExternalAddress(ctx context.Context, in *MsgSetDefaultExternalAddress, opts ...grpc.CallOption) (*MsgSetDefaultExternalAddressResponse, error) {
	out := new(MsgSetDefaultExternalAddressResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/SetDefaultExternalAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LinkApplication(ctx context.Context, in *MsgLinkApplication, opts ...grpc.CallOption) (*MsgLinkApplicationResponse, error) {
	out := new(MsgLinkApplicationResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/LinkApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnlinkApplication(ctx context.Context, in *MsgUnlinkApplication, opts ...grpc.CallOption) (*MsgUnlinkApplicationResponse, error) {
	out := new(MsgUnlinkApplicationResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/UnlinkApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/desmos.profiles.v3.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// SaveProfile defines the method to save a profile
	SaveProfile(context.Context, *MsgSaveProfile) (*MsgSaveProfileResponse, error)
	// DeleteProfile defines the method to delete an existing profile
	DeleteProfile(context.Context, *MsgDeleteProfile) (*MsgDeleteProfileResponse, error)
	// RequestDTagTransfer defines the method to request another user to transfer
	// their DTag to you
	RequestDTagTransfer(context.Context, *MsgRequestDTagTransfer) (*MsgRequestDTagTransferResponse, error)
	// CancelDTagTransferRequest defines the method to cancel an outgoing DTag
	// transfer request
	CancelDTagTransferRequest(context.Context, *MsgCancelDTagTransferRequest) (*MsgCancelDTagTransferRequestResponse, error)
	// AcceptDTagTransferRequest defines the method to accept an incoming DTag
	// transfer request
	AcceptDTagTransferRequest(context.Context, *MsgAcceptDTagTransferRequest) (*MsgAcceptDTagTransferRequestResponse, error)
	// RefuseDTagTransferRequest defines the method to refuse an incoming DTag
	// transfer request
	RefuseDTagTransferRequest(context.Context, *MsgRefuseDTagTransferRequest) (*MsgRefuseDTagTransferRequestResponse, error)
	// LinkChainAccount defines a method to link an external chain account to a
	// profile
	LinkChainAccount(context.Context, *MsgLinkChainAccount) (*MsgLinkChainAccountResponse, error)
	// UnlinkChainAccount defines a method to unlink an external chain account
	// from a profile
	UnlinkChainAccount(context.Context, *MsgUnlinkChainAccount) (*MsgUnlinkChainAccountResponse, error)
	// SetDefaultExternalAddress allows to set a specific external address as the
	// default one for a given chain
	SetDefaultExternalAddress(context.Context, *MsgSetDefaultExternalAddress) (*MsgSetDefaultExternalAddressResponse, error)
	// LinkApplication defines a method to create a centralized application
	// link
	LinkApplication(context.Context, *MsgLinkApplication) (*MsgLinkApplicationResponse, error)
	// UnlinkApplication defines a method to remove a centralized application
	UnlinkApplication(context.Context, *MsgUnlinkApplication) (*MsgUnlinkApplicationResponse, error)
	// UpdateParams defines a (governance) operation for updating the module
	// parameters.
	// The authority defaults to the x/gov module account.
	//
	// Since: Desmos 5.0.0
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SaveProfile(ctx context.Context, req *MsgSaveProfile) (*MsgSaveProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveProfile not implemented")
}
func (*UnimplementedMsgServer) DeleteProfile(ctx context.Context, req *MsgDeleteProfile) (*MsgDeleteProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProfile not implemented")
}
func (*UnimplementedMsgServer) RequestDTagTransfer(ctx context.Context, req *MsgRequestDTagTransfer) (*MsgRequestDTagTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestDTagTransfer not implemented")
}
func (*UnimplementedMsgServer) CancelDTagTransferRequest(ctx context.Context, req *MsgCancelDTagTransferRequest) (*MsgCancelDTagTransferRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelDTagTransferRequest not implemented")
}
func (*UnimplementedMsgServer) AcceptDTagTransferRequest(ctx context.Context, req *MsgAcceptDTagTransferRequest) (*MsgAcceptDTagTransferRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptDTagTransferRequest not implemented")
}
func (*UnimplementedMsgServer) RefuseDTagTransferRequest(ctx context.Context, req *MsgRefuseDTagTransferRequest) (*MsgRefuseDTagTransferRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RefuseDTagTransferRequest not implemented")
}
func (*UnimplementedMsgServer) LinkChainAccount(ctx context.Context, req *MsgLinkChainAccount) (*MsgLinkChainAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkChainAccount not implemented")
}
func (*UnimplementedMsgServer) UnlinkChainAccount(ctx context.Context, req *MsgUnlinkChainAccount) (*MsgUnlinkChainAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlinkChainAccount not implemented")
}
func (*UnimplementedMsgServer) SetDefaultExternalAddress(ctx context.Context, req *MsgSetDefaultExternalAddress) (*MsgSetDefaultExternalAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDefaultExternalAddress not implemented")
}
func (*UnimplementedMsgServer) LinkApplication(ctx context.Context, req *MsgLinkApplication) (*MsgLinkApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkApplication not implemented")
}
func (*UnimplementedMsgServer) UnlinkApplication(ctx context.Context, req *MsgUnlinkApplication) (*MsgUnlinkApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlinkApplication not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SaveProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSaveProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SaveProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/SaveProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SaveProfile(ctx, req.(*MsgSaveProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteProfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/DeleteProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteProfile(ctx, req.(*MsgDeleteProfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RequestDTagTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequestDTagTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RequestDTagTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/RequestDTagTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RequestDTagTransfer(ctx, req.(*MsgRequestDTagTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CancelDTagTransferRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelDTagTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CancelDTagTransferRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/CancelDTagTransferRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CancelDTagTransferRequest(ctx, req.(*MsgCancelDTagTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AcceptDTagTransferRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAcceptDTagTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AcceptDTagTransferRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/AcceptDTagTransferRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AcceptDTagTransferRequest(ctx, req.(*MsgAcceptDTagTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RefuseDTagTransferRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRefuseDTagTransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RefuseDTagTransferRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/RefuseDTagTransferRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RefuseDTagTransferRequest(ctx, req.(*MsgRefuseDTagTransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LinkChainAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLinkChainAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LinkChainAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/LinkChainAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LinkChainAccount(ctx, req.(*MsgLinkChainAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnlinkChainAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnlinkChainAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnlinkChainAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/UnlinkChainAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnlinkChainAccount(ctx, req.(*MsgUnlinkChainAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetDefaultExternalAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetDefaultExternalAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetDefaultExternalAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/SetDefaultExternalAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetDefaultExternalAddress(ctx, req.(*MsgSetDefaultExternalAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LinkApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLinkApplication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LinkApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/LinkApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LinkApplication(ctx, req.(*MsgLinkApplication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnlinkApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnlinkApplication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnlinkApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/UnlinkApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnlinkApplication(ctx, req.(*MsgUnlinkApplication))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/desmos.profiles.v3.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "desmos.profiles.v3.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveProfile",
			Handler:    _Msg_SaveProfile_Handler,
		},
		{
			MethodName: "DeleteProfile",
			Handler:    _Msg_DeleteProfile_Handler,
		},
		{
			MethodName: "RequestDTagTransfer",
			Handler:    _Msg_RequestDTagTransfer_Handler,
		},
		{
			MethodName: "CancelDTagTransferRequest",
			Handler:    _Msg_CancelDTagTransferRequest_Handler,
		},
		{
			MethodName: "AcceptDTagTransferRequest",
			Handler:    _Msg_AcceptDTagTransferRequest_Handler,
		},
		{
			MethodName: "RefuseDTagTransferRequest",
			Handler:    _Msg_RefuseDTagTransferRequest_Handler,
		},
		{
			MethodName: "LinkChainAccount",
			Handler:    _Msg_LinkChainAccount_Handler,
		},
		{
			MethodName: "UnlinkChainAccount",
			Handler:    _Msg_UnlinkChainAccount_Handler,
		},
		{
			MethodName: "SetDefaultExternalAddress",
			Handler:    _Msg_SetDefaultExternalAddress_Handler,
		},
		{
			MethodName: "LinkApplication",
			Handler:    _Msg_LinkApplication_Handler,
		},
		{
			MethodName: "UnlinkApplication",
			Handler:    _Msg_UnlinkApplication_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "desmos/profiles/v3/msg_server.proto",
}

func (m *MsgSaveProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSaveProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSaveProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CoverPicture) > 0 {
		i -= len(m.CoverPicture)
		copy(dAtA[i:], m.CoverPicture)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.CoverPicture)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ProfilePicture) > 0 {
		i -= len(m.ProfilePicture)
		copy(dAtA[i:], m.ProfilePicture)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.ProfilePicture)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Bio) > 0 {
		i -= len(m.Bio)
		copy(dAtA[i:], m.Bio)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Bio)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Nickname) > 0 {
		i -= len(m.Nickname)
		copy(dAtA[i:], m.Nickname)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Nickname)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DTag) > 0 {
		i -= len(m.DTag)
		copy(dAtA[i:], m.DTag)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.DTag)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSaveProfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSaveProfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSaveProfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRequestDTagTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestDTagTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestDTagTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRequestDTagTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestDTagTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestDTagTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCancelDTagTransferRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelDTagTransferRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelDTagTransferRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelDTagTransferRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelDTagTransferRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelDTagTransferRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAcceptDTagTransferRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcceptDTagTransferRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcceptDTagTransferRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NewDTag) > 0 {
		i -= len(m.NewDTag)
		copy(dAtA[i:], m.NewDTag)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.NewDTag)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAcceptDTagTransferRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcceptDTagTransferRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcceptDTagTransferRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRefuseDTagTransferRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRefuseDTagTransferRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRefuseDTagTransferRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRefuseDTagTransferRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRefuseDTagTransferRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRefuseDTagTransferRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLinkChainAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLinkChainAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLinkChainAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x22
	}
	{
		size, err := m.ChainConfig.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgServer(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Proof.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgServer(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.ChainAddress != nil {
		{
			size, err := m.ChainAddress.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMsgServer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLinkChainAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLinkChainAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLinkChainAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnlinkChainAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnlinkChainAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnlinkChainAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Target) > 0 {
		i -= len(m.Target)
		copy(dAtA[i:], m.Target)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Target)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ChainName) > 0 {
		i -= len(m.ChainName)
		copy(dAtA[i:], m.ChainName)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.ChainName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnlinkChainAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnlinkChainAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnlinkChainAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetDefaultExternalAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetDefaultExternalAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetDefaultExternalAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Target) > 0 {
		i -= len(m.Target)
		copy(dAtA[i:], m.Target)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Target)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainName) > 0 {
		i -= len(m.ChainName)
		copy(dAtA[i:], m.ChainName)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.ChainName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetDefaultExternalAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetDefaultExternalAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetDefaultExternalAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLinkApplication) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLinkApplication) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLinkApplication) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TimeoutTimestamp != 0 {
		i = encodeVarintMsgServer(dAtA, i, uint64(m.TimeoutTimestamp))
		i--
		dAtA[i] = 0x38
	}
	{
		size, err := m.TimeoutHeight.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgServer(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if len(m.SourceChannel) > 0 {
		i -= len(m.SourceChannel)
		copy(dAtA[i:], m.SourceChannel)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.SourceChannel)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SourcePort) > 0 {
		i -= len(m.SourcePort)
		copy(dAtA[i:], m.SourcePort)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.SourcePort)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CallData) > 0 {
		i -= len(m.CallData)
		copy(dAtA[i:], m.CallData)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.CallData)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.LinkData.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgServer(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLinkApplicationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLinkApplicationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLinkApplicationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnlinkApplication) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnlinkApplication) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnlinkApplication) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Application) > 0 {
		i -= len(m.Application)
		copy(dAtA[i:], m.Application)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Application)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnlinkApplicationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnlinkApplicationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnlinkApplicationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgServer(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintMsgServer(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMsgServer(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgServer(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSaveProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DTag)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Bio)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.ProfilePicture)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.CoverPicture)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgSaveProfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgDeleteProfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRequestDTagTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgRequestDTagTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCancelDTagTransferRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgCancelDTagTransferRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAcceptDTagTransferRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NewDTag)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgAcceptDTagTransferRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRefuseDTagTransferRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgRefuseDTagTransferRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLinkChainAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ChainAddress != nil {
		l = m.ChainAddress.Size()
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = m.Proof.Size()
	n += 1 + l + sovMsgServer(uint64(l))
	l = m.ChainConfig.Size()
	n += 1 + l + sovMsgServer(uint64(l))
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgLinkChainAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnlinkChainAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.ChainName)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Target)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgUnlinkChainAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetDefaultExternalAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainName)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Target)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgSetDefaultExternalAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLinkApplication) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = m.LinkData.Size()
	n += 1 + l + sovMsgServer(uint64(l))
	l = len(m.CallData)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.SourcePort)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.SourceChannel)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = m.TimeoutHeight.Size()
	n += 1 + l + sovMsgServer(uint64(l))
	if m.TimeoutTimestamp != 0 {
		n += 1 + sovMsgServer(uint64(m.TimeoutTimestamp))
	}
	return n
}

func (m *MsgLinkApplicationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnlinkApplication) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Application)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	return n
}

func (m *MsgUnlinkApplicationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovMsgServer(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovMsgServer(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMsgServer(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgServer(x uint64) (n int) {
	return sovMsgServer(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSaveProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSaveProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSaveProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DTag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DTag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfilePicture", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProfilePicture = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CoverPicture", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CoverPicture = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSaveProfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSaveProfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSaveProfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestDTagTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestDTagTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestDTagTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestDTagTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestDTagTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestDTagTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelDTagTransferRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelDTagTransferRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelDTagTransferRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelDTagTransferRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelDTagTransferRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelDTagTransferRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcceptDTagTransferRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcceptDTagTransferRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcceptDTagTransferRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewDTag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewDTag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcceptDTagTransferRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcceptDTagTransferRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcceptDTagTransferRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRefuseDTagTransferRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRefuseDTagTransferRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRefuseDTagTransferRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRefuseDTagTransferRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRefuseDTagTransferRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRefuseDTagTransferRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLinkChainAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLinkChainAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLinkChainAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainAddress", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ChainAddress == nil {
				m.ChainAddress = &types.Any{}
			}
			if err := m.ChainAddress.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Proof.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ChainConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLinkChainAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLinkChainAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLinkChainAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnlinkChainAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnlinkChainAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnlinkChainAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Target = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnlinkChainAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnlinkChainAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnlinkChainAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetDefaultExternalAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetDefaultExternalAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetDefaultExternalAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Target = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetDefaultExternalAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetDefaultExternalAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetDefaultExternalAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLinkApplication) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLinkApplication: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLinkApplication: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinkData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LinkData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourcePort", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourcePort = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceChannel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceChannel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeoutHeight", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TimeoutHeight.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeoutTimestamp", wireType)
			}
			m.TimeoutTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeoutTimestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLinkApplicationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLinkApplicationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLinkApplicationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnlinkApplication) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnlinkApplication: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnlinkApplication: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Application", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Application = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnlinkApplicationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnlinkApplicationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnlinkApplicationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgServer(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgServer
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgServer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgServer
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgServer
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgServer
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgServer        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgServer          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgServer = fmt.Errorf("proto: unexpected end of group")
)
