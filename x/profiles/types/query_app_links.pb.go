// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: desmos/profiles/v1beta1/query_app_links.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/regen-network/cosmos-proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryProfileByAppLinkRequest represent the parameters used to query for a
// specific profile given an application name and a username
type QueryProfileByAppLinkRequest struct {
	Application string `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	Username    string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (m *QueryProfileByAppLinkRequest) Reset()         { *m = QueryProfileByAppLinkRequest{} }
func (m *QueryProfileByAppLinkRequest) String() string { return proto.CompactTextString(m) }
func (*QueryProfileByAppLinkRequest) ProtoMessage()    {}
func (*QueryProfileByAppLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18d2a2b45fd238cb, []int{0}
}
func (m *QueryProfileByAppLinkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryProfileByAppLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryProfileByAppLinkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryProfileByAppLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProfileByAppLinkRequest.Merge(m, src)
}
func (m *QueryProfileByAppLinkRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryProfileByAppLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProfileByAppLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProfileByAppLinkRequest proto.InternalMessageInfo

func (m *QueryProfileByAppLinkRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *QueryProfileByAppLinkRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// QueryProfileByAppLinkResponse represents the response to the query used to
// get a profile by a given application name and username
type QueryProfileByAppLinkResponse struct {
	Profile *types.Any `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (m *QueryProfileByAppLinkResponse) Reset()         { *m = QueryProfileByAppLinkResponse{} }
func (m *QueryProfileByAppLinkResponse) String() string { return proto.CompactTextString(m) }
func (*QueryProfileByAppLinkResponse) ProtoMessage()    {}
func (*QueryProfileByAppLinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18d2a2b45fd238cb, []int{1}
}
func (m *QueryProfileByAppLinkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryProfileByAppLinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryProfileByAppLinkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryProfileByAppLinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProfileByAppLinkResponse.Merge(m, src)
}
func (m *QueryProfileByAppLinkResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryProfileByAppLinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProfileByAppLinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProfileByAppLinkResponse proto.InternalMessageInfo

func (m *QueryProfileByAppLinkResponse) GetProfile() *types.Any {
	if m != nil {
		return m.Profile
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryProfileByAppLinkRequest)(nil), "desmos.profiles.v1beta1.QueryProfileByAppLinkRequest")
	proto.RegisterType((*QueryProfileByAppLinkResponse)(nil), "desmos.profiles.v1beta1.QueryProfileByAppLinkResponse")
}

func init() {
	proto.RegisterFile("desmos/profiles/v1beta1/query_app_links.proto", fileDescriptor_18d2a2b45fd238cb)
}

var fileDescriptor_18d2a2b45fd238cb = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xb1, 0x4e, 0xeb, 0x30,
	0x14, 0x86, 0x9b, 0x3b, 0xdc, 0xdb, 0x9b, 0x32, 0x45, 0x95, 0x28, 0x51, 0x89, 0xaa, 0x4e, 0x08,
	0x54, 0x5b, 0x85, 0x95, 0xa5, 0x9d, 0x40, 0x62, 0x80, 0x8e, 0x08, 0x14, 0x39, 0xa9, 0x1b, 0xac,
	0x26, 0x3e, 0xa7, 0xb1, 0x83, 0xc8, 0x5b, 0xf0, 0x30, 0x3c, 0x04, 0x62, 0xea, 0xc8, 0x88, 0xda,
	0x17, 0x41, 0xb5, 0xdd, 0xc2, 0xd2, 0xcd, 0xbf, 0xff, 0xcf, 0xff, 0xf1, 0xf9, 0xfd, 0xc1, 0x94,
	0xab, 0x02, 0x14, 0xc5, 0x12, 0x66, 0x22, 0xe7, 0x8a, 0x3e, 0x0f, 0x13, 0xae, 0xd9, 0x90, 0x2e,
	0x2a, 0x5e, 0xd6, 0x31, 0x43, 0x8c, 0x73, 0x21, 0xe7, 0x8a, 0x60, 0x09, 0x1a, 0x82, 0x43, 0x8b,
	0x93, 0x2d, 0x4e, 0x1c, 0x1e, 0xb6, 0x33, 0xc8, 0xc0, 0x30, 0x74, 0x73, 0xb2, 0x78, 0xd8, 0xcd,
	0x00, 0xb2, 0x9c, 0x53, 0x86, 0x82, 0x32, 0x29, 0x41, 0x33, 0x2d, 0x40, 0xba, 0xb0, 0xf0, 0xc8,
	0xb9, 0x46, 0x25, 0xd5, 0x8c, 0x32, 0x59, 0x3b, 0xeb, 0x6c, 0xdf, 0xb7, 0x0a, 0x98, 0xf2, 0x5c,
	0xc5, 0xc8, 0x4a, 0x56, 0xec, 0x72, 0x52, 0xd8, 0xc0, 0xb1, 0x1d, 0x6f, 0x85, 0xb3, 0x4e, 0xad,
	0xa2, 0x09, 0x53, 0xdc, 0xae, 0xb4, 0x4b, 0x42, 0x96, 0x09, 0x69, 0xfe, 0x63, 0xd9, 0xfe, 0x83,
	0xdf, 0xbd, 0xdb, 0x10, 0xb7, 0x76, 0xe6, 0xb8, 0x1e, 0x21, 0xde, 0x08, 0x39, 0x9f, 0xf0, 0x45,
	0xc5, 0x95, 0x0e, 0x7a, 0x7e, 0x8b, 0x21, 0xe6, 0x22, 0x35, 0x8f, 0x3a, 0x5e, 0xcf, 0x3b, 0xf9,
	0x3f, 0xf9, 0x7d, 0x15, 0x84, 0x7e, 0xb3, 0x52, 0xbc, 0x94, 0xac, 0xe0, 0x9d, 0x3f, 0xc6, 0xde,
	0xe9, 0xfe, 0xa3, 0x7f, 0xbc, 0x27, 0x5d, 0x21, 0x48, 0xc5, 0x83, 0x4b, 0xff, 0x9f, 0xdb, 0xd6,
	0x44, 0xb7, 0xce, 0xdb, 0xc4, 0xf6, 0x43, 0xb6, 0xfd, 0x90, 0x91, 0xac, 0xc7, 0x07, 0x1f, 0x6f,
	0x83, 0xe6, 0x28, 0x4d, 0xa1, 0x92, 0xfa, 0x7a, 0xb2, 0x7d, 0x32, 0xbe, 0x7a, 0x5f, 0x45, 0xde,
	0x72, 0x15, 0x79, 0x5f, 0xab, 0xc8, 0x7b, 0x5d, 0x47, 0x8d, 0xe5, 0x3a, 0x6a, 0x7c, 0xae, 0xa3,
	0xc6, 0x3d, 0xc9, 0x84, 0x7e, 0xaa, 0x12, 0x92, 0x42, 0x41, 0x6d, 0xab, 0x83, 0x9c, 0x25, 0xca,
	0x9d, 0xe9, 0xcb, 0x4f, 0xc7, 0xba, 0x46, 0xae, 0x92, 0xbf, 0x66, 0xdc, 0xc5, 0x77, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x17, 0x87, 0x59, 0xaf, 0x1a, 0x02, 0x00, 0x00,
}

func (m *QueryProfileByAppLinkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryProfileByAppLinkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryProfileByAppLinkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintQueryAppLinks(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Application) > 0 {
		i -= len(m.Application)
		copy(dAtA[i:], m.Application)
		i = encodeVarintQueryAppLinks(dAtA, i, uint64(len(m.Application)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryProfileByAppLinkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryProfileByAppLinkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryProfileByAppLinkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Profile != nil {
		{
			size, err := m.Profile.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQueryAppLinks(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQueryAppLinks(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueryAppLinks(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryProfileByAppLinkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Application)
	if l > 0 {
		n += 1 + l + sovQueryAppLinks(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovQueryAppLinks(uint64(l))
	}
	return n
}

func (m *QueryProfileByAppLinkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Profile != nil {
		l = m.Profile.Size()
		n += 1 + l + sovQueryAppLinks(uint64(l))
	}
	return n
}

func sovQueryAppLinks(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueryAppLinks(x uint64) (n int) {
	return sovQueryAppLinks(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryProfileByAppLinkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryAppLinks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryProfileByAppLinkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryProfileByAppLinkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Application", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryAppLinks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryAppLinks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryAppLinks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Application = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryAppLinks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryAppLinks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryAppLinks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryAppLinks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryAppLinks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryProfileByAppLinkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryAppLinks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryProfileByAppLinkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryProfileByAppLinkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Profile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryAppLinks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueryAppLinks
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueryAppLinks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Profile == nil {
				m.Profile = &types.Any{}
			}
			if err := m.Profile.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryAppLinks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryAppLinks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueryAppLinks(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueryAppLinks
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryAppLinks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryAppLinks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueryAppLinks
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueryAppLinks
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueryAppLinks
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueryAppLinks        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueryAppLinks          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueryAppLinks = fmt.Errorf("proto: unexpected end of group")
)
