// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: desmos/profiles/v1beta1/query_chain_links.proto

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/regen-network/cosmos-proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// QueryProfileByChainLinkRequest is the request type for the
// Query/ProfileByLink RPC endpoint
type QueryProfileByChainLinkRequest struct {
	ChainName     string `protobuf:"bytes,1,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	TargetAddress string `protobuf:"bytes,2,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`
}

func (m *QueryProfileByChainLinkRequest) Reset()         { *m = QueryProfileByChainLinkRequest{} }
func (m *QueryProfileByChainLinkRequest) String() string { return proto.CompactTextString(m) }
func (*QueryProfileByChainLinkRequest) ProtoMessage()    {}
func (*QueryProfileByChainLinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c44c4be38a628772, []int{0}
}
func (m *QueryProfileByChainLinkRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryProfileByChainLinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryProfileByChainLinkRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryProfileByChainLinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProfileByChainLinkRequest.Merge(m, src)
}
func (m *QueryProfileByChainLinkRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryProfileByChainLinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProfileByChainLinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProfileByChainLinkRequest proto.InternalMessageInfo

func (m *QueryProfileByChainLinkRequest) GetChainName() string {
	if m != nil {
		return m.ChainName
	}
	return ""
}

func (m *QueryProfileByChainLinkRequest) GetTargetAddress() string {
	if m != nil {
		return m.TargetAddress
	}
	return ""
}

// QueryProfileByChainLinkResponse is the response type for the
// Query/ProfileByChainLink RPC method.
type QueryProfileByChainLinkResponse struct {
	Profile *types.Any `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (m *QueryProfileByChainLinkResponse) Reset()         { *m = QueryProfileByChainLinkResponse{} }
func (m *QueryProfileByChainLinkResponse) String() string { return proto.CompactTextString(m) }
func (*QueryProfileByChainLinkResponse) ProtoMessage()    {}
func (*QueryProfileByChainLinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c44c4be38a628772, []int{1}
}
func (m *QueryProfileByChainLinkResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryProfileByChainLinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryProfileByChainLinkResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryProfileByChainLinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProfileByChainLinkResponse.Merge(m, src)
}
func (m *QueryProfileByChainLinkResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryProfileByChainLinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProfileByChainLinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProfileByChainLinkResponse proto.InternalMessageInfo

func (m *QueryProfileByChainLinkResponse) GetProfile() *types.Any {
	if m != nil {
		return m.Profile
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryProfileByChainLinkRequest)(nil), "desmos.profiles.v1beta1.QueryProfileByChainLinkRequest")
	proto.RegisterType((*QueryProfileByChainLinkResponse)(nil), "desmos.profiles.v1beta1.QueryProfileByChainLinkResponse")
}

func init() {
	proto.RegisterFile("desmos/profiles/v1beta1/query_chain_links.proto", fileDescriptor_c44c4be38a628772)
}

var fileDescriptor_c44c4be38a628772 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0xbd, 0x4e, 0xf3, 0x30,
	0x14, 0x6d, 0xbe, 0xe1, 0xfb, 0xbe, 0x86, 0x9f, 0x21, 0xaa, 0x44, 0xa9, 0xc0, 0xa0, 0x4a, 0x48,
	0x08, 0xa9, 0xb6, 0x0a, 0x2b, 0x4b, 0xcb, 0x02, 0x12, 0x42, 0xd0, 0x91, 0x25, 0x72, 0xd2, 0x5b,
	0xd7, 0x6a, 0xe2, 0x9b, 0xc6, 0x0e, 0x22, 0x6f, 0xc1, 0xc3, 0xf0, 0x10, 0x88, 0xa9, 0x23, 0x23,
	0x6a, 0x5f, 0x04, 0xc5, 0x4e, 0x60, 0x62, 0xf3, 0xbd, 0xf7, 0x9c, 0x7b, 0xee, 0xf1, 0xf1, 0xd9,
	0x14, 0x74, 0x8a, 0x9a, 0x65, 0x39, 0xce, 0x64, 0x02, 0x9a, 0x3d, 0x0d, 0x23, 0x30, 0x7c, 0xc8,
	0x96, 0x05, 0xe4, 0x65, 0x18, 0xcf, 0xb9, 0x54, 0x61, 0x22, 0xd5, 0x42, 0xd3, 0x2c, 0x47, 0x83,
	0xc1, 0x9e, 0x23, 0xd0, 0x86, 0x40, 0x6b, 0x42, 0xaf, 0x23, 0x50, 0xa0, 0xc5, 0xb0, 0xea, 0xe5,
	0xe0, 0xbd, 0x03, 0x81, 0x28, 0x12, 0x60, 0x3c, 0x93, 0x8c, 0x2b, 0x85, 0x86, 0x1b, 0x89, 0xaa,
	0x5e, 0xd6, 0xdb, 0xaf, 0xa7, 0xb6, 0x8a, 0x8a, 0x19, 0xe3, 0xaa, 0x6c, 0x46, 0x31, 0x56, 0x3a,
	0xa1, 0xdb, 0xe8, 0x8a, 0x7a, 0x74, 0xe6, 0x2a, 0x16, 0x71, 0x0d, 0xee, 0xce, 0xef, 0xab, 0x33,
	0x2e, 0xa4, 0xb2, 0x12, 0x0e, 0xdb, 0x9f, 0xf9, 0xe4, 0xa1, 0x42, 0xdc, 0xbb, 0x73, 0xc7, 0xe5,
	0x55, 0xe5, 0xe8, 0x56, 0xaa, 0xc5, 0x04, 0x96, 0x05, 0x68, 0x13, 0x1c, 0xfa, 0xbe, 0x73, 0xa9,
	0x78, 0x0a, 0x5d, 0xef, 0xd8, 0x3b, 0x6d, 0x4f, 0xda, 0xb6, 0x73, 0xc7, 0x53, 0x08, 0x4e, 0xfc,
	0x5d, 0xc3, 0x73, 0x01, 0x26, 0xe4, 0xd3, 0x69, 0x0e, 0x5a, 0x77, 0xff, 0x58, 0xc8, 0x8e, 0xeb,
	0x8e, 0x5c, 0xb3, 0x1f, 0xfa, 0x47, 0xbf, 0xea, 0xe8, 0x0c, 0x95, 0x86, 0xe0, 0xd2, 0xff, 0x57,
	0x7f, 0x9a, 0x55, 0xd9, 0x3a, 0xef, 0x50, 0x67, 0x9f, 0x36, 0xf6, 0xe9, 0x48, 0x95, 0xe3, 0xed,
	0xf7, 0xd7, 0xc1, 0xff, 0x51, 0x1c, 0x63, 0xa1, 0xcc, 0xcd, 0xa4, 0xa1, 0x8c, 0xaf, 0xdf, 0xd6,
	0xc4, 0x5b, 0xad, 0x89, 0xf7, 0xb9, 0x26, 0xde, 0xcb, 0x86, 0xb4, 0x56, 0x1b, 0xd2, 0xfa, 0xd8,
	0x90, 0xd6, 0x23, 0x15, 0xd2, 0xcc, 0x8b, 0x88, 0xc6, 0x98, 0xd6, 0x69, 0x0e, 0x12, 0x1e, 0xe9,
	0x26, 0xd9, 0xe7, 0x9f, 0x6c, 0x4d, 0x99, 0x81, 0x8e, 0xfe, 0x5a, 0xb9, 0x8b, 0xaf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x5a, 0x99, 0x18, 0xcd, 0xfb, 0x01, 0x00, 0x00,
}

func (m *QueryProfileByChainLinkRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryProfileByChainLinkRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryProfileByChainLinkRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TargetAddress) > 0 {
		i -= len(m.TargetAddress)
		copy(dAtA[i:], m.TargetAddress)
		i = encodeVarintQueryChainLinks(dAtA, i, uint64(len(m.TargetAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChainName) > 0 {
		i -= len(m.ChainName)
		copy(dAtA[i:], m.ChainName)
		i = encodeVarintQueryChainLinks(dAtA, i, uint64(len(m.ChainName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryProfileByChainLinkResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryProfileByChainLinkResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryProfileByChainLinkResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Profile != nil {
		{
			size, err := m.Profile.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQueryChainLinks(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQueryChainLinks(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueryChainLinks(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryProfileByChainLinkRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChainName)
	if l > 0 {
		n += 1 + l + sovQueryChainLinks(uint64(l))
	}
	l = len(m.TargetAddress)
	if l > 0 {
		n += 1 + l + sovQueryChainLinks(uint64(l))
	}
	return n
}

func (m *QueryProfileByChainLinkResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Profile != nil {
		l = m.Profile.Size()
		n += 1 + l + sovQueryChainLinks(uint64(l))
	}
	return n
}

func sovQueryChainLinks(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueryChainLinks(x uint64) (n int) {
	return sovQueryChainLinks(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryProfileByChainLinkRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryChainLinks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryProfileByChainLinkRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryProfileByChainLinkRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChainName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryChainLinks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryChainLinks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryChainLinks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChainName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryChainLinks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryChainLinks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryChainLinks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryChainLinks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryChainLinks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryProfileByChainLinkResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryChainLinks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryProfileByChainLinkResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryProfileByChainLinkResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Profile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryChainLinks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueryChainLinks
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueryChainLinks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Profile == nil {
				m.Profile = &types.Any{}
			}
			if err := m.Profile.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryChainLinks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryChainLinks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueryChainLinks(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueryChainLinks
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryChainLinks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryChainLinks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueryChainLinks
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueryChainLinks
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueryChainLinks
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueryChainLinks        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueryChainLinks          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueryChainLinks = fmt.Errorf("proto: unexpected end of group")
)
