// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: desmos/profiles/v3/msgs_dtag_requests.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgRequestDTagTransfer represents the message used to request the DTag
// transfer to another user.
type MsgRequestDTagTransfer struct {
	// Receiver contains the address of the request receiver that owns the DTag to
	// transfer if the request is accepted
	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
	// Sender contains the address of the request sender that will receive the
	// receiver DTag if the requet is accepted
	Sender string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
}

func (m *MsgRequestDTagTransfer) Reset()         { *m = MsgRequestDTagTransfer{} }
func (m *MsgRequestDTagTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgRequestDTagTransfer) ProtoMessage()    {}
func (*MsgRequestDTagTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_00569a18db7c139d, []int{0}
}
func (m *MsgRequestDTagTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestDTagTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestDTagTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestDTagTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestDTagTransfer.Merge(m, src)
}
func (m *MsgRequestDTagTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestDTagTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestDTagTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestDTagTransfer proto.InternalMessageInfo

func (m *MsgRequestDTagTransfer) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MsgRequestDTagTransfer) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// MsgRequestDTagTransferResponse defines the Msg/RequestDTagTransfer response
// type.
type MsgRequestDTagTransferResponse struct {
}

func (m *MsgRequestDTagTransferResponse) Reset()         { *m = MsgRequestDTagTransferResponse{} }
func (m *MsgRequestDTagTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRequestDTagTransferResponse) ProtoMessage()    {}
func (*MsgRequestDTagTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00569a18db7c139d, []int{1}
}
func (m *MsgRequestDTagTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestDTagTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestDTagTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestDTagTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestDTagTransferResponse.Merge(m, src)
}
func (m *MsgRequestDTagTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestDTagTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestDTagTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestDTagTransferResponse proto.InternalMessageInfo

// MsgCancelDTagTransferRequest represents the message used to cancel a DTag
// transfer request.
type MsgCancelDTagTransferRequest struct {
	// Receiver contains the address of the request receiver
	Receiver string `protobuf:"bytes,1,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
	// Sender contains the address of the requets sender
	Sender string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
}

func (m *MsgCancelDTagTransferRequest) Reset()         { *m = MsgCancelDTagTransferRequest{} }
func (m *MsgCancelDTagTransferRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCancelDTagTransferRequest) ProtoMessage()    {}
func (*MsgCancelDTagTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00569a18db7c139d, []int{2}
}
func (m *MsgCancelDTagTransferRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelDTagTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelDTagTransferRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelDTagTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelDTagTransferRequest.Merge(m, src)
}
func (m *MsgCancelDTagTransferRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelDTagTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelDTagTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelDTagTransferRequest proto.InternalMessageInfo

func (m *MsgCancelDTagTransferRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MsgCancelDTagTransferRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// MsgCancelDTagTransferRequestResponse represents the
// Msg/CancelDTagTransferRequest response type.
type MsgCancelDTagTransferRequestResponse struct {
}

func (m *MsgCancelDTagTransferRequestResponse) Reset()         { *m = MsgCancelDTagTransferRequestResponse{} }
func (m *MsgCancelDTagTransferRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelDTagTransferRequestResponse) ProtoMessage()    {}
func (*MsgCancelDTagTransferRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00569a18db7c139d, []int{3}
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelDTagTransferRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelDTagTransferRequestResponse.Merge(m, src)
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelDTagTransferRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelDTagTransferRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelDTagTransferRequestResponse proto.InternalMessageInfo

// MsgAcceptDTagTransferRequest represents the message used to accept a DTag
// transfer request.
type MsgAcceptDTagTransferRequest struct {
	// NewDTag represents the DTag that the request receiver will obtain if they
	// accept the request
	NewDTag string `protobuf:"bytes,1,opt,name=new_dtag,json=newDtag,proto3" json:"new_dtag,omitempty" yaml:"new_dtag"`
	// Sender represents the request sender
	Sender string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
	// Receiver represents the request receiver
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
}

func (m *MsgAcceptDTagTransferRequest) Reset()         { *m = MsgAcceptDTagTransferRequest{} }
func (m *MsgAcceptDTagTransferRequest) String() string { return proto.CompactTextString(m) }
func (*MsgAcceptDTagTransferRequest) ProtoMessage()    {}
func (*MsgAcceptDTagTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00569a18db7c139d, []int{4}
}
func (m *MsgAcceptDTagTransferRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcceptDTagTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcceptDTagTransferRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcceptDTagTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcceptDTagTransferRequest.Merge(m, src)
}
func (m *MsgAcceptDTagTransferRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcceptDTagTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcceptDTagTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcceptDTagTransferRequest proto.InternalMessageInfo

func (m *MsgAcceptDTagTransferRequest) GetNewDTag() string {
	if m != nil {
		return m.NewDTag
	}
	return ""
}

func (m *MsgAcceptDTagTransferRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgAcceptDTagTransferRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

// MsgAcceptDTagTransferRequestResponse defines the
// Msg/AcceptDTagTransferRequest response.
type MsgAcceptDTagTransferRequestResponse struct {
}

func (m *MsgAcceptDTagTransferRequestResponse) Reset()         { *m = MsgAcceptDTagTransferRequestResponse{} }
func (m *MsgAcceptDTagTransferRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAcceptDTagTransferRequestResponse) ProtoMessage()    {}
func (*MsgAcceptDTagTransferRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00569a18db7c139d, []int{5}
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAcceptDTagTransferRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAcceptDTagTransferRequestResponse.Merge(m, src)
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAcceptDTagTransferRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAcceptDTagTransferRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAcceptDTagTransferRequestResponse proto.InternalMessageInfo

// MsgRefuseDTagTransferRequest represents the message used to refuse a DTag
// transfer request.
type MsgRefuseDTagTransferRequest struct {
	// Sender represents the request sender
	Sender string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty" yaml:"sender"`
	// Receiver represents the request receiver
	Receiver string `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty" yaml:"receiver"`
}

func (m *MsgRefuseDTagTransferRequest) Reset()         { *m = MsgRefuseDTagTransferRequest{} }
func (m *MsgRefuseDTagTransferRequest) String() string { return proto.CompactTextString(m) }
func (*MsgRefuseDTagTransferRequest) ProtoMessage()    {}
func (*MsgRefuseDTagTransferRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00569a18db7c139d, []int{6}
}
func (m *MsgRefuseDTagTransferRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRefuseDTagTransferRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRefuseDTagTransferRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRefuseDTagTransferRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRefuseDTagTransferRequest.Merge(m, src)
}
func (m *MsgRefuseDTagTransferRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgRefuseDTagTransferRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRefuseDTagTransferRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRefuseDTagTransferRequest proto.InternalMessageInfo

func (m *MsgRefuseDTagTransferRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRefuseDTagTransferRequest) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

// MsgRefuseDTagTransferRequestResponse defines the
// Msg/RefuseDTagTransferRequest response.
type MsgRefuseDTagTransferRequestResponse struct {
}

func (m *MsgRefuseDTagTransferRequestResponse) Reset()         { *m = MsgRefuseDTagTransferRequestResponse{} }
func (m *MsgRefuseDTagTransferRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRefuseDTagTransferRequestResponse) ProtoMessage()    {}
func (*MsgRefuseDTagTransferRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00569a18db7c139d, []int{7}
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRefuseDTagTransferRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRefuseDTagTransferRequestResponse.Merge(m, src)
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRefuseDTagTransferRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRefuseDTagTransferRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRefuseDTagTransferRequestResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRequestDTagTransfer)(nil), "desmos.profiles.v3.MsgRequestDTagTransfer")
	proto.RegisterType((*MsgRequestDTagTransferResponse)(nil), "desmos.profiles.v3.MsgRequestDTagTransferResponse")
	proto.RegisterType((*MsgCancelDTagTransferRequest)(nil), "desmos.profiles.v3.MsgCancelDTagTransferRequest")
	proto.RegisterType((*MsgCancelDTagTransferRequestResponse)(nil), "desmos.profiles.v3.MsgCancelDTagTransferRequestResponse")
	proto.RegisterType((*MsgAcceptDTagTransferRequest)(nil), "desmos.profiles.v3.MsgAcceptDTagTransferRequest")
	proto.RegisterType((*MsgAcceptDTagTransferRequestResponse)(nil), "desmos.profiles.v3.MsgAcceptDTagTransferRequestResponse")
	proto.RegisterType((*MsgRefuseDTagTransferRequest)(nil), "desmos.profiles.v3.MsgRefuseDTagTransferRequest")
	proto.RegisterType((*MsgRefuseDTagTransferRequestResponse)(nil), "desmos.profiles.v3.MsgRefuseDTagTransferRequestResponse")
}

func init() {
	proto.RegisterFile("desmos/profiles/v3/msgs_dtag_requests.proto", fileDescriptor_00569a18db7c139d)
}

var fileDescriptor_00569a18db7c139d = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x41, 0x8b, 0xd3, 0x40,
	0x14, 0xc7, 0x9b, 0x15, 0x76, 0xd7, 0x01, 0x11, 0xe3, 0x22, 0xeb, 0x22, 0xd3, 0x25, 0x88, 0xb8,
	0x2c, 0xcd, 0x20, 0xc5, 0x83, 0xde, 0x5a, 0x0b, 0x1e, 0xa4, 0x1e, 0x62, 0x4f, 0x5e, 0x4a, 0x9a,
	0xbc, 0x8e, 0x81, 0x24, 0x13, 0xe7, 0x4d, 0x53, 0xfb, 0x2d, 0xfc, 0x1c, 0x9e, 0xfd, 0x10, 0x1e,
	0x8b, 0x27, 0x4f, 0x45, 0x52, 0xfc, 0x02, 0xfd, 0x04, 0xd2, 0x4c, 0xd2, 0xda, 0x36, 0xf5, 0xd2,
	0xde, 0x26, 0x79, 0xbf, 0x4c, 0xfe, 0xbf, 0xf7, 0x78, 0xe4, 0xd6, 0x07, 0x8c, 0x04, 0xb2, 0x44,
	0x8a, 0x61, 0x10, 0x02, 0xb2, 0xb4, 0xc9, 0x22, 0xe4, 0xd8, 0xf7, 0x95, 0xcb, 0xfb, 0x12, 0x3e,
	0x8f, 0x00, 0x15, 0xda, 0x89, 0x14, 0x4a, 0x98, 0xa6, 0x86, 0xed, 0x12, 0xb6, 0xd3, 0xe6, 0xd5,
	0x05, 0x17, 0x5c, 0xe4, 0x65, 0xb6, 0x3c, 0x69, 0xf2, 0xea, 0xb1, 0x27, 0x96, 0x64, 0x5f, 0x17,
	0xf4, 0x83, 0x2e, 0x59, 0x8a, 0x3c, 0xea, 0x22, 0x77, 0xf4, 0xcd, 0x9d, 0x9e, 0xcb, 0x7b, 0xd2,
	0x8d, 0x71, 0x08, 0xd2, 0x64, 0xe4, 0x5c, 0x82, 0x07, 0x41, 0x0a, 0xf2, 0xd2, 0xb8, 0x36, 0x9e,
	0xdf, 0x6d, 0x3f, 0x5c, 0xcc, 0xea, 0xf7, 0x27, 0x6e, 0x14, 0xbe, 0xb6, 0xca, 0x8a, 0xe5, 0xac,
	0x20, 0xf3, 0x86, 0x9c, 0x22, 0xc4, 0x3e, 0xc8, 0xcb, 0x93, 0x1c, 0x7f, 0xb0, 0x98, 0xd5, 0xef,
	0x69, 0x5c, 0xbf, 0xb7, 0x9c, 0x02, 0xb0, 0xae, 0x09, 0xad, 0xfe, 0xab, 0x03, 0x98, 0x88, 0x18,
	0xc1, 0xfa, 0x66, 0x90, 0x27, 0x5d, 0xe4, 0x6f, 0xdc, 0xd8, 0x83, 0x70, 0x93, 0xc8, 0x3f, 0x32,
	0xdf, 0xee, 0xc4, 0xbb, 0xad, 0x88, 0xf7, 0xf3, 0x7b, 0xe3, 0xa2, 0xf0, 0x6d, 0xf9, 0xbe, 0x04,
	0xc4, 0x0f, 0x4a, 0x06, 0x31, 0xff, 0x27, 0x76, 0x6b, 0x2b, 0xf6, 0xcd, 0x4e, 0xec, 0xbd, 0x97,
	0x94, 0x3a, 0xcf, 0xc8, 0xd3, 0xff, 0x65, 0x5d, 0x49, 0xfd, 0xd1, 0x52, 0x2d, 0xcf, 0x83, 0x44,
	0x55, 0x49, 0xbd, 0x22, 0xe7, 0x31, 0x8c, 0xf3, 0x69, 0x17, 0x52, 0x34, 0x9b, 0xd5, 0xcf, 0xde,
	0xc3, 0x78, 0x49, 0xaf, 0xfd, 0x4a, 0xc8, 0x72, 0xce, 0x62, 0x18, 0x77, 0x94, 0xcb, 0x8f, 0xa0,
	0xb1, 0xd1, 0xd2, 0x3b, 0x07, 0xb4, 0xb4, 0xe8, 0xc7, 0x5e, 0xcd, 0xed, 0x21, 0x3b, 0x30, 0x1c,
	0x21, 0x54, 0xf5, 0x63, 0x2d, 0x65, 0x1c, 0x43, 0xea, 0xe4, 0x70, 0xa9, 0xbd, 0x59, 0x4b, 0xa9,
	0xf6, 0xbb, 0x1f, 0x19, 0x35, 0xa6, 0x19, 0x35, 0x7e, 0x67, 0xd4, 0xf8, 0x3a, 0xa7, 0xb5, 0xe9,
	0x9c, 0xd6, 0x7e, 0xcd, 0x69, 0xed, 0xe3, 0x0b, 0x1e, 0xa8, 0x4f, 0xa3, 0x81, 0xed, 0x89, 0x88,
	0xe9, 0xdd, 0x6d, 0x84, 0xee, 0x00, 0x8b, 0x33, 0x4b, 0x5f, 0xb2, 0x2f, 0xeb, 0xcd, 0x57, 0x93,
	0x04, 0x70, 0x70, 0x9a, 0x6f, 0x69, 0xf3, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x6f, 0x6d,
	0x43, 0x19, 0x04, 0x00, 0x00,
}

func (m *MsgRequestDTagTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestDTagTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestDTagTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRequestDTagTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestDTagTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestDTagTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCancelDTagTransferRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelDTagTransferRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelDTagTransferRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelDTagTransferRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelDTagTransferRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelDTagTransferRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAcceptDTagTransferRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcceptDTagTransferRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcceptDTagTransferRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.NewDTag) > 0 {
		i -= len(m.NewDTag)
		copy(dAtA[i:], m.NewDTag)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.NewDTag)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAcceptDTagTransferRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAcceptDTagTransferRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAcceptDTagTransferRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRefuseDTagTransferRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRefuseDTagTransferRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRefuseDTagTransferRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Receiver) > 0 {
		i -= len(m.Receiver)
		copy(dAtA[i:], m.Receiver)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.Receiver)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintMsgsDtagRequests(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRefuseDTagTransferRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRefuseDTagTransferRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRefuseDTagTransferRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMsgsDtagRequests(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgsDtagRequests(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRequestDTagTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	return n
}

func (m *MsgRequestDTagTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCancelDTagTransferRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	return n
}

func (m *MsgCancelDTagTransferRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAcceptDTagTransferRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NewDTag)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	return n
}

func (m *MsgAcceptDTagTransferRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRefuseDTagTransferRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	l = len(m.Receiver)
	if l > 0 {
		n += 1 + l + sovMsgsDtagRequests(uint64(l))
	}
	return n
}

func (m *MsgRefuseDTagTransferRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMsgsDtagRequests(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgsDtagRequests(x uint64) (n int) {
	return sovMsgsDtagRequests(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRequestDTagTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestDTagTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestDTagTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsDtagRequests(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestDTagTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestDTagTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestDTagTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsDtagRequests(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelDTagTransferRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelDTagTransferRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelDTagTransferRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsDtagRequests(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelDTagTransferRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelDTagTransferRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelDTagTransferRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsDtagRequests(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcceptDTagTransferRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcceptDTagTransferRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcceptDTagTransferRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewDTag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewDTag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsDtagRequests(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAcceptDTagTransferRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAcceptDTagTransferRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAcceptDTagTransferRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsDtagRequests(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRefuseDTagTransferRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRefuseDTagTransferRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRefuseDTagTransferRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Receiver", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Receiver = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsDtagRequests(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRefuseDTagTransferRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRefuseDTagTransferRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRefuseDTagTransferRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMsgsDtagRequests(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgsDtagRequests
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgsDtagRequests(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgsDtagRequests
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgsDtagRequests
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgsDtagRequests
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgsDtagRequests
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgsDtagRequests
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgsDtagRequests        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgsDtagRequests          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgsDtagRequests = fmt.Errorf("proto: unexpected end of group")
)
