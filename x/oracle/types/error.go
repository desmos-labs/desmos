package types

import (
	errors "cosmossdk.io/errors"
)

var (
	ErrOwasmCompilation         = errors.Register(ModuleName, 1, "owasm compilation failed")
	ErrBadWasmExecution         = errors.Register(ModuleName, 2, "bad wasm execution")
	ErrDataSourceNotFound       = errors.Register(ModuleName, 3, "data source not found")
	ErrOracleScriptNotFound     = errors.Register(ModuleName, 4, "oracle script not found")
	ErrRequestNotFound          = errors.Register(ModuleName, 5, "request not found")
	ErrRawRequestNotFound       = errors.Register(ModuleName, 6, "raw request not found")
	ErrReporterNotFound         = errors.Register(ModuleName, 7, "reporter not found")
	ErrResultNotFound           = errors.Register(ModuleName, 8, "result not found")
	ErrReporterAlreadyExists    = errors.Register(ModuleName, 9, "reporter already exists")
	ErrValidatorNotRequested    = errors.Register(ModuleName, 10, "validator not requested")
	ErrValidatorAlreadyReported = errors.Register(ModuleName, 11, "validator already reported")
	ErrInvalidReportSize        = errors.Register(ModuleName, 12, "invalid report size")
	ErrReporterNotAuthorized    = errors.Register(ModuleName, 13, "reporter not authorized")
	ErrEditorNotAuthorized      = errors.Register(ModuleName, 14, "editor not authorized")
	ErrValidatorAlreadyActive   = errors.Register(ModuleName, 16, "validator already active")
	ErrTooSoonToActivate        = errors.Register(ModuleName, 17, "too soon to activate")
	ErrTooLongName              = errors.Register(ModuleName, 18, "too long name")
	ErrTooLongDescription       = errors.Register(ModuleName, 19, "too long description")
	ErrEmptyExecutable          = errors.Register(ModuleName, 20, "empty executable")
	ErrEmptyWasmCode            = errors.Register(ModuleName, 21, "empty wasm code")
	ErrTooLargeExecutable       = errors.Register(ModuleName, 22, "too large executable")
	ErrTooLargeWasmCode         = errors.Register(ModuleName, 23, "too large wasm code")
	ErrInvalidMinCount          = errors.Register(ModuleName, 24, "invalid min count")
	ErrInvalidAskCount          = errors.Register(ModuleName, 25, "invalid ask count")
	ErrTooLargeCalldata         = errors.Register(ModuleName, 26, "too large calldata")
	ErrTooLongClientID          = errors.Register(ModuleName, 27, "too long client id")
	ErrEmptyRawRequests         = errors.Register(ModuleName, 28, "empty raw requests")
	ErrEmptyReport              = errors.Register(ModuleName, 29, "empty report")
	ErrDuplicateExternalID      = errors.Register(ModuleName, 30, "duplicate external id")
	ErrTooLongSchema            = errors.Register(ModuleName, 31, "too long schema")
	ErrTooLongURL               = errors.Register(ModuleName, 32, "too long url")
	ErrTooLargeRawReportData    = errors.Register(ModuleName, 33, "too large raw report data")
	ErrInsufficientValidators   = errors.Register(ModuleName, 34, "insufficient available validators")
	ErrCreateWithDoNotModify    = errors.Register(ModuleName, 35, "cannot create with [do-not-modify] content")
	ErrSelfReferenceAsReporter  = errors.Register(ModuleName, 36, "cannot reference self as reporter")
	ErrOBIDecode                = errors.Register(ModuleName, 37, "obi decode failed")
	ErrUncompressionFailed      = errors.Register(ModuleName, 38, "uncompression failed")
	ErrRequestAlreadyExpired    = errors.Register(ModuleName, 39, "request already expired")
	ErrBadDrbgInitialization    = errors.Register(ModuleName, 40, "bad drbg initialization")
	ErrMaxOracleChannels        = errors.Register(ModuleName, 41, "max oracle channels")
	ErrInvalidVersion           = errors.Register(ModuleName, 42, "invalid ICS20 version")
	ErrNotEnoughFee             = errors.Register(ModuleName, 43, "not enough fee")
	ErrInvalidOwasmGas          = errors.Register(ModuleName, 44, "invalid owasm gas")
	ErrIBCRequestDisabled       = errors.Register(ModuleName, 45, "sending oracle request via IBC is disabled")
)

// WrapMaxError wraps an error message with additional info of the current and max values.
func WrapMaxError(err error, got int, max int) error {
	return errors.Wrapf(err, "got: %d, max: %d", got, max)
}
